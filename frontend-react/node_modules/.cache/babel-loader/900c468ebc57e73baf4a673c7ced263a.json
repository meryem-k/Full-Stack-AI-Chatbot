{"ast":null,"code":"var _jsxFileName = \"/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nconst App = () => {\n  const [question, setQuestion] = useState('');\n  const [sessionId, setSessionId] = useState(uuidv4());\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [showYesNoButtons, setShowYesNoButtons] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatWindowRef = useRef(null);\n  useEffect(() => {\n    if (chatOpen && messages.length === 0) {\n      setMessages([{\n        user: '',\n        bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?'\n      }, {\n        user: '',\n        bot: '',\n        options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order']\n      }]);\n    }\n  }, [chatOpen]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleOptionClick = async option => {\n    setMessages(prevMessages => [...prevMessages, {\n      user: option,\n      bot: ''\n    }]);\n    if (option === 'Product Information') {\n      const res = await fetch('http://localhost:4000/api/product-information', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sessionId\n        })\n      });\n      const data = await res.json();\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n    } else if (option === 'Submit a Ticket for Damaged Product') {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: 'Please provide your order number, a description of the issue, and a photo of the damage.'\n      }]);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: `Option \"${option}\" selected. Feature to be implemented.`\n      }]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (question.trim()) {\n      const userMessage = {\n        user: question,\n        bot: ''\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      setQuestion('');\n      const res = await fetch('http://localhost:4000/api/product-information-followup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question,\n          sessionId\n        }) // Ensure sessionId is passed\n      });\n      const data = await res.json();\n      if (data.response.includes('Was the packaging damaged from the outside?') || data.response.includes('Do you have the original packaging and the box?')) {\n        setShowYesNoButtons(true);\n      } else {\n        setShowYesNoButtons(false);\n      }\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n    } else {\n      alert('Please enter a question.');\n    }\n  };\n  const handleYesNoClick = async answer => {\n    const userMessage = {\n      user: answer,\n      bot: ''\n    };\n    setMessages(prevMessages => [...prevMessages, userMessage]);\n    const res = await fetch('http://localhost:4000/api/product-information-followup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        question: answer,\n        sessionId\n      }) // Ensure sessionId is passed\n    });\n    const data = await res.json();\n    setShowYesNoButtons(false);\n    setMessages(prevMessages => [...prevMessages, {\n      user: '',\n      bot: data.response\n    }]);\n  };\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n  const handleEndSession = () => {\n    setSessionId(uuidv4());\n    setMessages([]);\n    setChatOpen(false);\n    setQuestion('');\n  };\n  const handleClickOutside = e => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `chat-bubble ${chatOpen ? 'open' : ''}`,\n    onClick: toggleChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"chat icon\",\n    className: \"bubble-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDCAC\")), chatOpen && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-window\",\n    ref: chatWindowRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, \"Furniture Store Assistant\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"close-btn\",\n    onClick: toggleChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"\\xD7\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"chat-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, msg.user && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 30\n    }\n  }, msg.user), msg.bot && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bot-response\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 29\n    }\n  }, msg.bot), msg.options && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 19\n    }\n  }, msg.options.map((option, i) => /*#__PURE__*/React.createElement(\"button\", {\n    key: i,\n    onClick: () => handleOptionClick(option),\n    className: \"option-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 23\n    }\n  }, option))))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }\n  })), showYesNoButtons ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"yes-no-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleYesNoClick('Yes'),\n    className: \"yes-no-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 15\n    }\n  }, \"Yes\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleYesNoClick('No'),\n    className: \"yes-no-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 15\n    }\n  }, \"No\")) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"chat-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: question,\n    onChange: e => setQuestion(e.target.value),\n    placeholder: \"Type your message\",\n    className: \"chat-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"chat-submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 15\n    }\n  }, \"Send\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleEndSession,\n    className: \"end-session-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, \"Close Session\")));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","useRef","v4","uuidv4","App","question","setQuestion","sessionId","setSessionId","chatOpen","setChatOpen","messages","setMessages","showYesNoButtons","setShowYesNoButtons","messagesEndRef","chatWindowRef","length","user","bot","options","scrollToBottom","handleOptionClick","option","prevMessages","res","fetch","method","headers","body","JSON","stringify","data","json","response","handleSubmit","e","preventDefault","trim","userMessage","includes","alert","handleYesNoClick","answer","toggleChat","handleEndSession","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","scrollIntoView","behavior","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","ref","map","msg","index","key","i","onSubmit","type","value","onChange","placeholder"],"sources":["/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst App = () => {\n  const [question, setQuestion] = useState('');\n  const [sessionId, setSessionId] = useState(uuidv4());\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [showYesNoButtons, setShowYesNoButtons] = useState(false);\n  const messagesEndRef = useRef(null);\n  const chatWindowRef = useRef(null);\n\n  useEffect(() => {\n    if (chatOpen && messages.length === 0) {\n      setMessages([\n        { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n        { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n      ]);\n    }\n  }, [chatOpen]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleOptionClick = async (option) => {\n    setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n    if (option === 'Product Information') {\n      const res = await fetch('http://localhost:4000/api/product-information', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ sessionId }),\n      });\n\n      const data = await res.json();\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n    } else if (option === 'Submit a Ticket for Damaged Product') {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { user: '', bot: 'Please provide your order number, a description of the issue, and a photo of the damage.' }\n      ]);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (question.trim()) {\n      const userMessage = { user: question, bot: '' };\n      setMessages((prevMessages) => [...prevMessages, userMessage]);\n      setQuestion('');\n\n      const res = await fetch('http://localhost:4000/api/product-information-followup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ question, sessionId }), // Ensure sessionId is passed\n      });\n\n      const data = await res.json();\n      if (data.response.includes('Was the packaging damaged from the outside?') || data.response.includes('Do you have the original packaging and the box?')) {\n        setShowYesNoButtons(true);\n      } else {\n        setShowYesNoButtons(false);\n      }\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n    } else {\n      alert('Please enter a question.');\n    }\n  };\n\n  const handleYesNoClick = async (answer) => {\n    const userMessage = { user: answer, bot: '' };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n\n    const res = await fetch('http://localhost:4000/api/product-information-followup', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ question: answer, sessionId }), // Ensure sessionId is passed\n    });\n\n    const data = await res.json();\n    setShowYesNoButtons(false);\n    setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n  };\n\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n\n  const handleEndSession = () => {\n    setSessionId(uuidv4());\n    setMessages([]);\n    setChatOpen(false);\n    setQuestion('');\n  };\n\n  const handleClickOutside = (e) => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n        <span role=\"img\" aria-label=\"chat icon\" className=\"bubble-icon\">💬</span>\n      </div>\n      {chatOpen && (\n        <div className=\"chat-window\" ref={chatWindowRef}>\n          <div className=\"chat-header\">\n            <span>Furniture Store Assistant</span>\n            <button className=\"close-btn\" onClick={toggleChat}>×</button>\n          </div>\n          <div className=\"chat-body\">\n            {messages.map((msg, index) => (\n              <div key={index} className=\"chat-message\">\n                {msg.user && <div className=\"user-message\">{msg.user}</div>}\n                {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n                {msg.options && (\n                  <div className=\"options\">\n                    {msg.options.map((option, i) => (\n                      <button key={i} onClick={() => handleOptionClick(option)} className=\"option-button\">\n                        {option}\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n          {showYesNoButtons ? (\n            <div className=\"yes-no-buttons\">\n              <button onClick={() => handleYesNoClick('Yes')} className=\"yes-no-button\">Yes</button>\n              <button onClick={() => handleYesNoClick('No')} className=\"yes-no-button\">No</button>\n            </div>\n          ) : (\n            <form onSubmit={handleSubmit} className=\"chat-form\">\n              <input\n                type=\"text\"\n                value={question}\n                onChange={(e) => setQuestion(e.target.value)}\n                placeholder=\"Type your message\"\n                className=\"chat-input\"\n              />\n              <button type=\"submit\" className=\"chat-submit\">Send</button>\n            </form>\n          )}\n          <button onClick={handleEndSession} className=\"end-session-btn\">Close Session</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}