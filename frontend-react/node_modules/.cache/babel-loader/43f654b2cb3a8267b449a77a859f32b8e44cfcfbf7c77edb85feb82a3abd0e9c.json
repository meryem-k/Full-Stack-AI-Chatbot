{"ast":null,"code":"var _jsxFileName = \"/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n// import { v4 as uuidv4 } from 'uuid';\n\n// const App = () => {\n//   const [question, setQuestion] = useState('');\n//   const [sessionId, setSessionId] = useState(uuidv4());\n//   const [chatOpen, setChatOpen] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const chatWindowRef = useRef(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (chatOpen && messages.length === 0) {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n//         { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n//       ]);\n//     }\n//   }, [chatOpen, messages.length]);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleOptionClick = async (option) => {\n//     setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n//     if (option === 'Product Information') {\n//       const res = await fetch('http://localhost:4000/api/product-information', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (question.trim()) {\n//       setMessages((prevMessages) => [...prevMessages, { user: question, bot: '' }]);\n//       const res = await fetch('http://localhost:4000/api/product-information-followup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ question, sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setQuestion('');\n//     } else {\n//       alert('Please enter a question.');\n//     }\n//   };\n\n//   const toggleChat = () => {\n//     setChatOpen(!chatOpen);\n//   };\n\n//   const handleEndSession = () => {\n//     setSessionId(uuidv4());\n//     setMessages([]);\n//     setChatOpen(false);\n//   };\n\n//   const handleClickOutside = (e) => {\n//     if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n//       setChatOpen(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const scrollToBottom = () => {\n//     if (messagesEndRef.current) {\n//       messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n//         <div className=\"bubble-icon\">ðŸ’¬</div>\n//       </div>\n//       {chatOpen && (\n//         <div className=\"chat-window\" ref={chatWindowRef}>\n//           <div className=\"chat-header\">\n//             <span>Furniture Store Assistant</span>\n//             <button className=\"close-btn\" onClick={toggleChat}>Ã—</button>\n//           </div>\n//           <div className=\"chat-body\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"chat-message\">\n//                 {msg.user && <div className=\"user-message\">{msg.user}</div>}\n//                 {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n//                 {msg.options && (\n//                   <div className=\"options\">\n//                     {msg.options.map((option, i) => (\n//                       <button key={i} onClick={() => handleOptionClick(option)} className=\"option-button\">\n//                         {option}\n//                       </button>\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           <form onSubmit={handleSubmit} className=\"chat-form\">\n//             <input\n//               type=\"text\"\n//               value={question}\n//               onChange={(e) => setQuestion(e.target.value)}\n//               placeholder=\"Type your message\"\n//               className=\"chat-input\"\n//             />\n//             <button type=\"submit\" className=\"chat-submit\">Send</button>\n//           </form>\n//           <button onClick={handleEndSession} className=\"end-session-btn\">Close Session</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n// import { v4 as uuidv4 } from 'uuid';\n// import { Button, TextField, IconButton, Paper, Typography } from '@mui/material';\n// import SendIcon from '@mui/icons-material/Send';\n// import CloseIcon from '@mui/icons-material/Close';\n\n// const App = () => {\n//   const [question, setQuestion] = useState('');\n//   const [sessionId, setSessionId] = useState(uuidv4());\n//   const [chatOpen, setChatOpen] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const [orderNumber, setOrderNumber] = useState('');\n//   const [issueDescription, setIssueDescription] = useState('');\n//   const [photo, setPhoto] = useState(null);\n//   const [photoPreview, setPhotoPreview] = useState(null);\n//   const [showTicketForm, setShowTicketForm] = useState(false);\n//   const [showAdditionalForm, setShowAdditionalForm] = useState(false);\n//   const chatWindowRef = useRef(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (chatOpen && messages.length === 0) {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n//         { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n//       ]);\n//     }\n//   }, [chatOpen, messages.length]);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleOptionClick = async (option) => {\n//     setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n//     if (option === 'Product Information') {\n//       const res = await fetch('http://localhost:4000/api/product-information', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//     } else if (option === 'Submit a Ticket for Damaged Product') {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Please provide your order number, a description of the issue, and a photo of the damage.' }\n//       ]);\n//       setShowTicketForm(true);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n//     }\n//   };\n\n//   const handleTicketSubmission = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('orderNumber', orderNumber);\n//     formData.append('issueDescription', issueDescription);\n//     formData.append('sessionId', sessionId);\n//     if (photo) {\n//       formData.append('photo', photo);\n//     }\n\n//     const res = await fetch('http://localhost:4000/api/submit-ticket', {\n//       method: 'POST',\n//       body: formData,\n//     });\n\n//     const data = await res.json();\n//     if (data.error) {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setShowTicketForm(false);\n//       setShowAdditionalForm(true);\n//     }\n\n//     setOrderNumber('');\n//     setIssueDescription('');\n//     setPhoto(null);\n//     setPhotoPreview(null);\n//   };\n\n//   const handleAdditionalInfoSubmission = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('sessionId', sessionId);\n//     formData.append('answer', question);\n//     if (photo) {\n//       formData.append('additionalPhoto', photo);\n//     }\n\n//     const res = await fetch('http://localhost:4000/api/submit-additional-info', {\n//       method: 'POST',\n//       body: formData,\n//     });\n\n//     const data = await res.json();\n//     if (data.error) {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: question, bot: data.response }]);\n//       setShowAdditionalForm(true);\n//       setQuestion('');\n//       setPhoto(null);\n//       setPhotoPreview(null);\n//     }\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     const file = e.target.files[0];\n//     setPhoto(file);\n//     setPhotoPreview(URL.createObjectURL(file));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (question.trim()) {\n//       const userMessage = { user: question, bot: '' };\n//       setMessages((prevMessages) => [...prevMessages, userMessage]);\n//       setQuestion('');\n\n//       const formData = new FormData();\n//       formData.append('question', question);\n//       formData.append('sessionId', sessionId);\n//       if (photo) {\n//         formData.append('additionalPhoto', photo);\n//       }\n\n//       const res = await fetch('http://localhost:4000/api/product-information-followup', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setPhoto(null);\n//       setPhotoPreview(null);\n//     } else {\n//       alert('Please enter a question.');\n//     }\n//   };\n\n//   const toggleChat = () => {\n//     setChatOpen(!chatOpen);\n//   };\n\n//   const handleEndSession = () => {\n//     setSessionId(uuidv4());\n//     setMessages([]);\n//     setChatOpen(false);\n//   };\n\n//   const handleClickOutside = (e) => {\n//     if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n//       setChatOpen(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const scrollToBottom = () => {\n//     if (messagesEndRef.current) {\n//       messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n//         <span role=\"img\" aria-label=\"chat icon\" className=\"bubble-icon\">ðŸ’¬</span>\n//       </div>\n//       {chatOpen && (\n//         <Paper elevation={3} className=\"chat-window\" ref={chatWindowRef}>\n//           <div className=\"chat-header\">\n//             <Typography variant=\"h6\">Furniture Store Assistant</Typography>\n//             <IconButton onClick={toggleChat} size=\"small\">\n//               <CloseIcon style={{ color: 'white' }} />\n//             </IconButton>\n//           </div>\n//           <div className=\"chat-body\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"chat-message\">\n//                 {msg.user && <div className=\"user-message\">{msg.user}</div>}\n//                 {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n//                 {msg.options && (\n//                   <div className=\"options\">\n//                     {msg.options.map((option, i) => (\n//                       <Button key={i} variant=\"contained\" onClick={() => handleOptionClick(option)} className=\"option-button\">\n//                         {option}\n//                       </Button>\n//                     ))}\n//                   </div>\n//                 )}\n//                 {msg.photo && <img src={msg.photo} alt=\"Uploaded\" className=\"chat-photo\" />}\n//               </div>\n//             ))}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           {showTicketForm && (\n//             <form onSubmit={handleTicketSubmission} className=\"chat-form\">\n//               <TextField\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 value={orderNumber}\n//                 onChange={(e) => setOrderNumber(e.target.value)}\n//                 placeholder=\"Order Number\"\n//                 className=\"chat-input\"\n//                 required\n//               />\n//               <TextField\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 multiline\n//                 rows={4}\n//                 value={issueDescription}\n//                 onChange={(e) => setIssueDescription(e.target.value)}\n//                 placeholder=\"Issue Description\"\n//                 className=\"chat-input\"\n//                 required\n//               />\n//               <input\n//                 type=\"file\"\n//                 onChange={handlePhotoChange}\n//                 className=\"chat-input\"\n//                 accept=\"image/*\"\n//               />\n//               {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n//                 Submit Ticket\n//               </Button>\n//             </form>\n//           )}\n//           {showAdditionalForm && (\n//             <form onSubmit={handleAdditionalInfoSubmission} className=\"chat-form\">\n//               <TextField\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 value={question}\n//                 onChange={(e) => setQuestion(e.target.value)}\n//                 placeholder=\"Type your answer here\"\n//                 className=\"chat-input\"\n//               />\n//               <input\n//                 type=\"file\"\n//                 name=\"additionalPhoto\"\n//                 onChange={handlePhotoChange}\n//                 className=\"chat-input\"\n//                 accept=\"image/*\"\n//               />\n//               {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n//                 Send\n//               </Button>\n//             </form>\n//           )}\n//           {!showTicketForm && !showAdditionalForm && (\n//             <form onSubmit={handleSubmit} className=\"chat-form\">\n//               <TextField\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 value={question}\n//                 onChange={(e) => setQuestion(e.target.value)}\n//                 placeholder=\"Type your message\"\n//                 className=\"chat-input\"\n//               />\n//               <input\n//                 type=\"file\"\n//                 onChange={handlePhotoChange}\n//                 className=\"chat-input\"\n//                 accept=\"image/*\"\n//               />\n//               {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n//                 Send\n//               </Button>\n//             </form>\n//           )}\n//           <Button onClick={handleEndSession} variant=\"contained\" color=\"secondary\" className=\"end-session-btn\">\n//             Close Session\n//           </Button>\n//         </Paper>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button, TextField, IconButton, Paper, Typography } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [sessionId, setSessionId] = useState(uuidv4());\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [orderNumber, setOrderNumber] = useState('');\n  const [issueDescription, setIssueDescription] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n  const [showTicketForm, setShowTicketForm] = useState(false);\n  const [showAdditionalForm, setShowAdditionalForm] = useState(false);\n  const chatWindowRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (chatOpen && messages.length === 0) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?'\n      }, {\n        user: '',\n        bot: '',\n        options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order']\n      }]);\n    }\n  }, [chatOpen, messages.length]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleOptionClick = async option => {\n    setMessages(prevMessages => [...prevMessages, {\n      user: option,\n      bot: ''\n    }]);\n    if (option === 'Product Information') {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: 'Please provide the full title of the product so I can further assist you.'\n      }]);\n    } else if (option === 'Submit a Ticket for Damaged Product') {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: 'Please provide your order number, a description of the issue, and a photo of the damage.'\n      }]);\n      setShowTicketForm(true);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: `Option \"${option}\" selected. Feature to be implemented.`\n      }]);\n    }\n  };\n  const handleTicketSubmission = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('orderNumber', orderNumber);\n    formData.append('issueDescription', issueDescription);\n    formData.append('sessionId', sessionId);\n    if (photo) {\n      formData.append('photo', photo);\n    }\n    const res = await fetch('http://localhost:4000/api/submit-ticket', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await res.json();\n    if (data.error) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.error\n      }]);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n      setShowTicketForm(false);\n      setShowAdditionalForm(true);\n    }\n    setOrderNumber('');\n    setIssueDescription('');\n    setPhoto(null);\n    setPhotoPreview(null);\n  };\n  const handleAdditionalInfoSubmission = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('sessionId', sessionId);\n    formData.append('answer', question);\n    if (photo) {\n      formData.append('additionalPhoto', photo);\n    }\n    const res = await fetch('http://localhost:4000/api/submit-additional-info', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await res.json();\n    if (data.error) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.error\n      }]);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: question,\n        bot: data.response\n      }]);\n      setShowAdditionalForm(true);\n      setQuestion('');\n      setPhoto(null);\n      setPhotoPreview(null);\n    }\n  };\n  const handlePhotoChange = e => {\n    const file = e.target.files[0];\n    setPhoto(file);\n    setPhotoPreview(URL.createObjectURL(file));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (question.trim()) {\n      const userMessage = {\n        user: question,\n        bot: ''\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      setQuestion('');\n      const formData = new FormData();\n      formData.append('question', question);\n      formData.append('sessionId', sessionId);\n      if (photo) {\n        formData.append('additionalPhoto', photo);\n      }\n      const res = await fetch('http://localhost:4000/api/product-information-followup', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n      setPhoto(null);\n      setPhotoPreview(null);\n    } else {\n      alert('Please enter a question.');\n    }\n  };\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n  const handleEndSession = () => {\n    setSessionId(uuidv4());\n    setMessages([]);\n    setChatOpen(false);\n  };\n  const handleClickOutside = e => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-bubble ${chatOpen ? 'open' : ''}`,\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"chat icon\",\n        className: \"bubble-icon\",\n        children: \"\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 639,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 638,\n      columnNumber: 7\n    }, this), chatOpen && /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: \"chat-window\",\n      ref: chatWindowRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: \"Furniture Store Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: toggleChat,\n          size: \"small\",\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            style: {\n              color: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 643,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: [msg.user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-message\",\n            children: msg.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 30\n          }, this), msg.bot && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-response\",\n            children: msg.bot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 653,\n            columnNumber: 29\n          }, this), msg.options && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: msg.options.map((option, i) => /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"contained\",\n              onClick: () => handleOptionClick(option),\n              className: \"option-button\",\n              children: option\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 657,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 655,\n            columnNumber: 19\n          }, this), msg.photo && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: msg.photo,\n            alt: \"Uploaded\",\n            className: \"chat-photo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 663,\n            columnNumber: 31\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 649,\n        columnNumber: 11\n      }, this), showTicketForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleTicketSubmission,\n        className: \"chat-form\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          value: orderNumber,\n          onChange: e => setOrderNumber(e.target.value),\n          placeholder: \"Order Number\",\n          className: \"chat-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          multiline: true,\n          rows: 4,\n          value: issueDescription,\n          onChange: e => setIssueDescription(e.target.value),\n          placeholder: \"Issue Description\",\n          className: \"chat-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handlePhotoChange,\n          className: \"chat-input\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 690,\n          columnNumber: 15\n        }, this), photoPreview && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: photoPreview,\n          alt: \"Preview\",\n          className: \"photo-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"chat-submit\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 697,\n            columnNumber: 106\n          }, this),\n          children: \"Submit Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 697,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 669,\n        columnNumber: 13\n      }, this), showAdditionalForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAdditionalInfoSubmission,\n        className: \"chat-form\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Type your answer here\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 704,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"additionalPhoto\",\n          onChange: handlePhotoChange,\n          className: \"chat-input\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 15\n        }, this), photoPreview && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: photoPreview,\n          alt: \"Preview\",\n          className: \"photo-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"chat-submit\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 106\n          }, this),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 703,\n        columnNumber: 13\n      }, this), !showTicketForm && !showAdditionalForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"chat-form\",\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          fullWidth: true,\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Type your message\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 727,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: handlePhotoChange,\n          className: \"chat-input\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 735,\n          columnNumber: 15\n        }, this), photoPreview && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: photoPreview,\n          alt: \"Preview\",\n          className: \"photo-preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 32\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          className: \"chat-submit\",\n          endIcon: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 106\n          }, this),\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleEndSession,\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"end-session-btn\",\n        children: \"Close Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 642,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 637,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"11G9EBf21dYFeMKO/GwzzrZUIx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","v4","uuidv4","Button","TextField","IconButton","Paper","Typography","SendIcon","CloseIcon","jsxDEV","_jsxDEV","App","_s","question","setQuestion","sessionId","setSessionId","chatOpen","setChatOpen","messages","setMessages","orderNumber","setOrderNumber","issueDescription","setIssueDescription","photo","setPhoto","photoPreview","setPhotoPreview","showTicketForm","setShowTicketForm","showAdditionalForm","setShowAdditionalForm","chatWindowRef","messagesEndRef","length","prevMessages","user","bot","options","scrollToBottom","handleOptionClick","option","handleTicketSubmission","e","preventDefault","formData","FormData","append","res","fetch","method","body","data","json","error","response","handleAdditionalInfoSubmission","handlePhotoChange","file","target","files","URL","createObjectURL","handleSubmit","trim","userMessage","alert","toggleChat","handleEndSession","handleClickOutside","current","contains","document","addEventListener","removeEventListener","scrollIntoView","behavior","className","children","onClick","role","fileName","_jsxFileName","lineNumber","columnNumber","elevation","ref","variant","size","style","color","map","msg","index","i","src","alt","onSubmit","fullWidth","value","onChange","placeholder","required","multiline","rows","type","accept","endIcon","name","_c","$RefreshReg$"],"sources":["/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n// import { v4 as uuidv4 } from 'uuid';\n\n// const App = () => {\n//   const [question, setQuestion] = useState('');\n//   const [sessionId, setSessionId] = useState(uuidv4());\n//   const [chatOpen, setChatOpen] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const chatWindowRef = useRef(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (chatOpen && messages.length === 0) {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n//         { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n//       ]);\n//     }\n//   }, [chatOpen, messages.length]);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleOptionClick = async (option) => {\n//     setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n//     if (option === 'Product Information') {\n//       const res = await fetch('http://localhost:4000/api/product-information', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (question.trim()) {\n//       setMessages((prevMessages) => [...prevMessages, { user: question, bot: '' }]);\n//       const res = await fetch('http://localhost:4000/api/product-information-followup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ question, sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setQuestion('');\n//     } else {\n//       alert('Please enter a question.');\n//     }\n//   };\n\n//   const toggleChat = () => {\n//     setChatOpen(!chatOpen);\n//   };\n\n//   const handleEndSession = () => {\n//     setSessionId(uuidv4());\n//     setMessages([]);\n//     setChatOpen(false);\n//   };\n\n//   const handleClickOutside = (e) => {\n//     if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n//       setChatOpen(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const scrollToBottom = () => {\n//     if (messagesEndRef.current) {\n//       messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n//         <div className=\"bubble-icon\">ðŸ’¬</div>\n//       </div>\n//       {chatOpen && (\n//         <div className=\"chat-window\" ref={chatWindowRef}>\n//           <div className=\"chat-header\">\n//             <span>Furniture Store Assistant</span>\n//             <button className=\"close-btn\" onClick={toggleChat}>Ã—</button>\n//           </div>\n//           <div className=\"chat-body\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"chat-message\">\n//                 {msg.user && <div className=\"user-message\">{msg.user}</div>}\n//                 {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n//                 {msg.options && (\n//                   <div className=\"options\">\n//                     {msg.options.map((option, i) => (\n//                       <button key={i} onClick={() => handleOptionClick(option)} className=\"option-button\">\n//                         {option}\n//                       </button>\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           <form onSubmit={handleSubmit} className=\"chat-form\">\n//             <input\n//               type=\"text\"\n//               value={question}\n//               onChange={(e) => setQuestion(e.target.value)}\n//               placeholder=\"Type your message\"\n//               className=\"chat-input\"\n//             />\n//             <button type=\"submit\" className=\"chat-submit\">Send</button>\n//           </form>\n//           <button onClick={handleEndSession} className=\"end-session-btn\">Close Session</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n// import { v4 as uuidv4 } from 'uuid';\n// import { Button, TextField, IconButton, Paper, Typography } from '@mui/material';\n// import SendIcon from '@mui/icons-material/Send';\n// import CloseIcon from '@mui/icons-material/Close';\n\n// const App = () => {\n//   const [question, setQuestion] = useState('');\n//   const [sessionId, setSessionId] = useState(uuidv4());\n//   const [chatOpen, setChatOpen] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const [orderNumber, setOrderNumber] = useState('');\n//   const [issueDescription, setIssueDescription] = useState('');\n//   const [photo, setPhoto] = useState(null);\n//   const [photoPreview, setPhotoPreview] = useState(null);\n//   const [showTicketForm, setShowTicketForm] = useState(false);\n//   const [showAdditionalForm, setShowAdditionalForm] = useState(false);\n//   const chatWindowRef = useRef(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (chatOpen && messages.length === 0) {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n//         { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n//       ]);\n//     }\n//   }, [chatOpen, messages.length]);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleOptionClick = async (option) => {\n//     setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n//     if (option === 'Product Information') {\n//       const res = await fetch('http://localhost:4000/api/product-information', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//     } else if (option === 'Submit a Ticket for Damaged Product') {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Please provide your order number, a description of the issue, and a photo of the damage.' }\n//       ]);\n//       setShowTicketForm(true);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n//     }\n//   };\n\n//   const handleTicketSubmission = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('orderNumber', orderNumber);\n//     formData.append('issueDescription', issueDescription);\n//     formData.append('sessionId', sessionId);\n//     if (photo) {\n//       formData.append('photo', photo);\n//     }\n\n//     const res = await fetch('http://localhost:4000/api/submit-ticket', {\n//       method: 'POST',\n//       body: formData,\n//     });\n\n//     const data = await res.json();\n//     if (data.error) {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setShowTicketForm(false);\n//       setShowAdditionalForm(true);\n//     }\n\n//     setOrderNumber('');\n//     setIssueDescription('');\n//     setPhoto(null);\n//     setPhotoPreview(null);\n//   };\n\n//   const handleAdditionalInfoSubmission = async (e) => {\n//     e.preventDefault();\n\n//     const formData = new FormData();\n//     formData.append('sessionId', sessionId);\n//     formData.append('answer', question);\n//     if (photo) {\n//       formData.append('additionalPhoto', photo);\n//     }\n\n//     const res = await fetch('http://localhost:4000/api/submit-additional-info', {\n//       method: 'POST',\n//       body: formData,\n//     });\n\n//     const data = await res.json();\n//     if (data.error) {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: question, bot: data.response }]);\n//       setShowAdditionalForm(true);\n//       setQuestion('');\n//       setPhoto(null);\n//       setPhotoPreview(null);\n//     }\n//   };\n\n//   const handlePhotoChange = (e) => {\n//     const file = e.target.files[0];\n//     setPhoto(file);\n//     setPhotoPreview(URL.createObjectURL(file));\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (question.trim()) {\n//       const userMessage = { user: question, bot: '' };\n//       setMessages((prevMessages) => [...prevMessages, userMessage]);\n//       setQuestion('');\n\n//       const formData = new FormData();\n//       formData.append('question', question);\n//       formData.append('sessionId', sessionId);\n//       if (photo) {\n//         formData.append('additionalPhoto', photo);\n//       }\n\n//       const res = await fetch('http://localhost:4000/api/product-information-followup', {\n//         method: 'POST',\n//         body: formData,\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setPhoto(null);\n//       setPhotoPreview(null);\n//     } else {\n//       alert('Please enter a question.');\n//     }\n//   };\n\n//   const toggleChat = () => {\n//     setChatOpen(!chatOpen);\n//   };\n\n//   const handleEndSession = () => {\n//     setSessionId(uuidv4());\n//     setMessages([]);\n//     setChatOpen(false);\n//   };\n\n//   const handleClickOutside = (e) => {\n//     if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n//       setChatOpen(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const scrollToBottom = () => {\n//     if (messagesEndRef.current) {\n//       messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n//         <span role=\"img\" aria-label=\"chat icon\" className=\"bubble-icon\">ðŸ’¬</span>\n//       </div>\n//       {chatOpen && (\n//         <Paper elevation={3} className=\"chat-window\" ref={chatWindowRef}>\n//           <div className=\"chat-header\">\n//             <Typography variant=\"h6\">Furniture Store Assistant</Typography>\n//             <IconButton onClick={toggleChat} size=\"small\">\n//               <CloseIcon style={{ color: 'white' }} />\n//             </IconButton>\n//           </div>\n//           <div className=\"chat-body\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"chat-message\">\n//                 {msg.user && <div className=\"user-message\">{msg.user}</div>}\n//                 {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n//                 {msg.options && (\n//                   <div className=\"options\">\n//                     {msg.options.map((option, i) => (\n//                       <Button key={i} variant=\"contained\" onClick={() => handleOptionClick(option)} className=\"option-button\">\n//                         {option}\n//                       </Button>\n//                     ))}\n//                   </div>\n//                 )}\n//                 {msg.photo && <img src={msg.photo} alt=\"Uploaded\" className=\"chat-photo\" />}\n//               </div>\n//             ))}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           {showTicketForm && (\n//             <form onSubmit={handleTicketSubmission} className=\"chat-form\">\n//               <TextField\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 value={orderNumber}\n//                 onChange={(e) => setOrderNumber(e.target.value)}\n//                 placeholder=\"Order Number\"\n//                 className=\"chat-input\"\n//                 required\n//               />\n//               <TextField\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 multiline\n//                 rows={4}\n//                 value={issueDescription}\n//                 onChange={(e) => setIssueDescription(e.target.value)}\n//                 placeholder=\"Issue Description\"\n//                 className=\"chat-input\"\n//                 required\n//               />\n//               <input\n//                 type=\"file\"\n//                 onChange={handlePhotoChange}\n//                 className=\"chat-input\"\n//                 accept=\"image/*\"\n//               />\n//               {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n//                 Submit Ticket\n//               </Button>\n//             </form>\n//           )}\n//           {showAdditionalForm && (\n//             <form onSubmit={handleAdditionalInfoSubmission} className=\"chat-form\">\n//               <TextField\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 value={question}\n//                 onChange={(e) => setQuestion(e.target.value)}\n//                 placeholder=\"Type your answer here\"\n//                 className=\"chat-input\"\n//               />\n//               <input\n//                 type=\"file\"\n//                 name=\"additionalPhoto\"\n//                 onChange={handlePhotoChange}\n//                 className=\"chat-input\"\n//                 accept=\"image/*\"\n//               />\n//               {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n//                 Send\n//               </Button>\n//             </form>\n//           )}\n//           {!showTicketForm && !showAdditionalForm && (\n//             <form onSubmit={handleSubmit} className=\"chat-form\">\n//               <TextField\n//                 variant=\"outlined\"\n//                 fullWidth\n//                 value={question}\n//                 onChange={(e) => setQuestion(e.target.value)}\n//                 placeholder=\"Type your message\"\n//                 className=\"chat-input\"\n//               />\n//               <input\n//                 type=\"file\"\n//                 onChange={handlePhotoChange}\n//                 className=\"chat-input\"\n//                 accept=\"image/*\"\n//               />\n//               {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n//               <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n//                 Send\n//               </Button>\n//             </form>\n//           )}\n//           <Button onClick={handleEndSession} variant=\"contained\" color=\"secondary\" className=\"end-session-btn\">\n//             Close Session\n//           </Button>\n//         </Paper>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button, TextField, IconButton, Paper, Typography } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst App = () => {\n  const [question, setQuestion] = useState('');\n  const [sessionId, setSessionId] = useState(uuidv4());\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [orderNumber, setOrderNumber] = useState('');\n  const [issueDescription, setIssueDescription] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n  const [showTicketForm, setShowTicketForm] = useState(false);\n  const [showAdditionalForm, setShowAdditionalForm] = useState(false);\n  const chatWindowRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    if (chatOpen && messages.length === 0) {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n        { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n      ]);\n    }\n  }, [chatOpen, messages.length]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleOptionClick = async (option) => {\n    setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n    if (option === 'Product Information') {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: 'Please provide the full title of the product so I can further assist you.' }]);\n    } else if (option === 'Submit a Ticket for Damaged Product') {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { user: '', bot: 'Please provide your order number, a description of the issue, and a photo of the damage.' }\n      ]);\n      setShowTicketForm(true);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n    }\n  };\n\n  const handleTicketSubmission = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('orderNumber', orderNumber);\n    formData.append('issueDescription', issueDescription);\n    formData.append('sessionId', sessionId);\n    if (photo) {\n      formData.append('photo', photo);\n    }\n\n    const res = await fetch('http://localhost:4000/api/submit-ticket', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const data = await res.json();\n    if (data.error) {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n      setShowTicketForm(false);\n      setShowAdditionalForm(true);\n    }\n\n    setOrderNumber('');\n    setIssueDescription('');\n    setPhoto(null);\n    setPhotoPreview(null);\n  };\n\n  const handleAdditionalInfoSubmission = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('sessionId', sessionId);\n    formData.append('answer', question);\n    if (photo) {\n      formData.append('additionalPhoto', photo);\n    }\n\n    const res = await fetch('http://localhost:4000/api/submit-additional-info', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const data = await res.json();\n    if (data.error) {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: question, bot: data.response }]);\n      setShowAdditionalForm(true);\n      setQuestion('');\n      setPhoto(null);\n      setPhotoPreview(null);\n    }\n  };\n\n  const handlePhotoChange = (e) => {\n    const file = e.target.files[0];\n    setPhoto(file);\n    setPhotoPreview(URL.createObjectURL(file));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (question.trim()) {\n      const userMessage = { user: question, bot: '' };\n      setMessages((prevMessages) => [...prevMessages, userMessage]);\n      setQuestion('');\n\n      const formData = new FormData();\n      formData.append('question', question);\n      formData.append('sessionId', sessionId);\n      if (photo) {\n        formData.append('additionalPhoto', photo);\n      }\n\n      const res = await fetch('http://localhost:4000/api/product-information-followup', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await res.json();\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n      setPhoto(null);\n      setPhotoPreview(null);\n    } else {\n      alert('Please enter a question.');\n    }\n  };\n\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n\n  const handleEndSession = () => {\n    setSessionId(uuidv4());\n    setMessages([]);\n    setChatOpen(false);\n  };\n\n  const handleClickOutside = (e) => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n        <span role=\"img\" aria-label=\"chat icon\" className=\"bubble-icon\">ðŸ’¬</span>\n      </div>\n      {chatOpen && (\n        <Paper elevation={3} className=\"chat-window\" ref={chatWindowRef}>\n          <div className=\"chat-header\">\n            <Typography variant=\"h6\">Furniture Store Assistant</Typography>\n            <IconButton onClick={toggleChat} size=\"small\">\n              <CloseIcon style={{ color: 'white' }} />\n            </IconButton>\n          </div>\n          <div className=\"chat-body\">\n            {messages.map((msg, index) => (\n              <div key={index} className=\"chat-message\">\n                {msg.user && <div className=\"user-message\">{msg.user}</div>}\n                {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n                {msg.options && (\n                  <div className=\"options\">\n                    {msg.options.map((option, i) => (\n                      <Button key={i} variant=\"contained\" onClick={() => handleOptionClick(option)} className=\"option-button\">\n                        {option}\n                      </Button>\n                    ))}\n                  </div>\n                )}\n                {msg.photo && <img src={msg.photo} alt=\"Uploaded\" className=\"chat-photo\" />}\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n          {showTicketForm && (\n            <form onSubmit={handleTicketSubmission} className=\"chat-form\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                value={orderNumber}\n                onChange={(e) => setOrderNumber(e.target.value)}\n                placeholder=\"Order Number\"\n                className=\"chat-input\"\n                required\n              />\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                multiline\n                rows={4}\n                value={issueDescription}\n                onChange={(e) => setIssueDescription(e.target.value)}\n                placeholder=\"Issue Description\"\n                className=\"chat-input\"\n                required\n              />\n              <input\n                type=\"file\"\n                onChange={handlePhotoChange}\n                className=\"chat-input\"\n                accept=\"image/*\"\n              />\n              {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n                Submit Ticket\n              </Button>\n            </form>\n          )}\n          {showAdditionalForm && (\n            <form onSubmit={handleAdditionalInfoSubmission} className=\"chat-form\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                value={question}\n                onChange={(e) => setQuestion(e.target.value)}\n                placeholder=\"Type your answer here\"\n                className=\"chat-input\"\n              />\n              <input\n                type=\"file\"\n                name=\"additionalPhoto\"\n                onChange={handlePhotoChange}\n                className=\"chat-input\"\n                accept=\"image/*\"\n              />\n              {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n                Send\n              </Button>\n            </form>\n          )}\n          {!showTicketForm && !showAdditionalForm && (\n            <form onSubmit={handleSubmit} className=\"chat-form\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                value={question}\n                onChange={(e) => setQuestion(e.target.value)}\n                placeholder=\"Type your message\"\n                className=\"chat-input\"\n              />\n              <input\n                type=\"file\"\n                onChange={handlePhotoChange}\n                className=\"chat-input\"\n                accept=\"image/*\"\n              />\n              {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n                Send\n              </Button>\n            </form>\n          )}\n          <Button onClick={handleEndSession} variant=\"contained\" color=\"secondary\" className=\"end-session-btn\">\n            Close Session\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAgBA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAChF,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}