{"ast":null,"code":"var _jsxFileName = \"/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chatOpen, setChatOpen] = useState(false);\n  const chatWindowRef = useRef(null);\n  useEffect(() => {\n    if (chatOpen) {\n      const welcomeMessage = {\n        user: '',\n        bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?',\n        options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order']\n      };\n      setMessages([welcomeMessage]);\n    }\n  }, [chatOpen]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const res = await fetch('http://localhost:4000/api/query', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        question\n      })\n    });\n    const data = await res.json();\n    const newMessage = {\n      user: question,\n      bot: data.choices[0].message.content\n    };\n    setMessages([...messages, newMessage]);\n    setQuestion('');\n  };\n  const handleOptionClick = async option => {\n    let apiEndpoint = '';\n    let payload = {};\n    switch (option) {\n      case 'Product Information':\n        apiEndpoint = 'http://localhost:4000/api/product-info';\n        payload = {\n          productName: 'Some Product'\n        }; // Adjust as necessary\n        break;\n      case 'Submit a Ticket for Damaged Product':\n        apiEndpoint = 'http://localhost:4000/api/submit-ticket';\n        payload = {\n          orderNumber: '12345',\n          email: 'customer@example.com',\n          productName: 'Some Product',\n          deliveryDate: '2022-01-01',\n          damageDescription: 'Damage details here',\n          photoUrl: 'http://example.com/photo.jpg'\n        }; // Adjust as necessary\n        break;\n      case 'Delivery Update':\n        apiEndpoint = 'http://localhost:4000/api/delivery-update';\n        payload = {\n          orderNumber: '12345'\n        }; // Adjust as necessary\n        break;\n      case 'Place an Order':\n        apiEndpoint = 'http://localhost:4000/api/place-order';\n        payload = {\n          customerName: 'John Doe',\n          email: 'john.doe@example.com',\n          address: '123 Main St',\n          productName: 'Some Product',\n          quantity: 1\n        }; // Adjust as necessary\n        break;\n      default:\n        return;\n    }\n    const res = await fetch(apiEndpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(payload)\n    });\n    const data = await res.json();\n    const newMessage = {\n      user: option,\n      bot: JSON.stringify(data)\n    }; // Adjust the bot response as necessary\n    setMessages([...messages, newMessage]);\n  };\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n  const handleClickOutside = e => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-bubble ${chatOpen ? 'open' : ''}`,\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble-icon\",\n        children: \"\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), chatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      ref: chatWindowRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: \"Furniture Store Assistant\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: [msg.user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-message\",\n            children: msg.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-response\",\n            children: [msg.bot, msg.options && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"options\",\n              children: msg.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleOptionClick(option),\n                className: \"option-button\",\n                children: option\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 25\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"chat-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Ask a question\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat-submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"sPVdbXTiCK/bWzElkhT2w36la4g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","App","_s","question","setQuestion","messages","setMessages","chatOpen","setChatOpen","chatWindowRef","welcomeMessage","user","bot","options","handleSubmit","e","preventDefault","res","fetch","method","headers","body","JSON","stringify","data","json","newMessage","choices","message","content","handleOptionClick","option","apiEndpoint","payload","productName","orderNumber","email","deliveryDate","damageDescription","photoUrl","customerName","address","quantity","toggleChat","handleClickOutside","current","contains","target","document","addEventListener","removeEventListener","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","index","i","onSubmit","type","value","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nconst App = () => {\n  const [question, setQuestion] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [chatOpen, setChatOpen] = useState(false);\n  const chatWindowRef = useRef(null);\n\n  useEffect(() => {\n    if (chatOpen) {\n      const welcomeMessage = {\n        user: '',\n        bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?',\n        options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order']\n      };\n      setMessages([welcomeMessage]);\n    }\n  }, [chatOpen]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const res = await fetch('http://localhost:4000/api/query', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ question }),\n    });\n\n    const data = await res.json();\n    const newMessage = { user: question, bot: data.choices[0].message.content };\n    setMessages([...messages, newMessage]);\n    setQuestion('');\n  };\n\n  const handleOptionClick = async (option) => {\n    let apiEndpoint = '';\n    let payload = {};\n\n    switch (option) {\n      case 'Product Information':\n        apiEndpoint = 'http://localhost:4000/api/product-info';\n        payload = { productName: 'Some Product' }; // Adjust as necessary\n        break;\n      case 'Submit a Ticket for Damaged Product':\n        apiEndpoint = 'http://localhost:4000/api/submit-ticket';\n        payload = { orderNumber: '12345', email: 'customer@example.com', productName: 'Some Product', deliveryDate: '2022-01-01', damageDescription: 'Damage details here', photoUrl: 'http://example.com/photo.jpg' }; // Adjust as necessary\n        break;\n      case 'Delivery Update':\n        apiEndpoint = 'http://localhost:4000/api/delivery-update';\n        payload = { orderNumber: '12345' }; // Adjust as necessary\n        break;\n      case 'Place an Order':\n        apiEndpoint = 'http://localhost:4000/api/place-order';\n        payload = { customerName: 'John Doe', email: 'john.doe@example.com', address: '123 Main St', productName: 'Some Product', quantity: 1 }; // Adjust as necessary\n        break;\n      default:\n        return;\n    }\n\n    const res = await fetch(apiEndpoint, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(payload),\n    });\n\n    const data = await res.json();\n    const newMessage = { user: option, bot: JSON.stringify(data) }; // Adjust the bot response as necessary\n    setMessages([...messages, newMessage]);\n  };\n\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n\n  const handleClickOutside = (e) => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n        <div className=\"bubble-icon\">💬</div>\n      </div>\n      {chatOpen && (\n        <div className=\"chat-window\" ref={chatWindowRef}>\n          <div className=\"chat-header\">Furniture Store Assistant</div>\n          <div className=\"chat-body\">\n            {messages.map((msg, index) => (\n              <div key={index} className=\"chat-message\">\n                {msg.user && <div className=\"user-message\">{msg.user}</div>}\n                <div className=\"bot-response\">\n                  {msg.bot}\n                  {msg.options && (\n                    <div className=\"options\">\n                      {msg.options.map((option, i) => (\n                        <button key={i} onClick={() => handleOptionClick(option)} className=\"option-button\">\n                          {option}\n                        </button>\n                      ))}\n                    </div>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n          <form onSubmit={handleSubmit} className=\"chat-form\">\n            <input \n              type=\"text\" \n              value={question} \n              onChange={(e) => setQuestion(e.target.value)} \n              placeholder=\"Ask a question\" \n              className=\"chat-input\"\n            />\n            <button type=\"submit\" className=\"chat-submit\">Send</button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}