{"ast":null,"code":"var _jsxFileName = \"/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js\";\n// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n// import { v4 as uuidv4 } from 'uuid';\n\n// const App = () => {\n//   const [question, setQuestion] = useState('');\n//   const [sessionId, setSessionId] = useState(uuidv4());\n//   const [chatOpen, setChatOpen] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const chatWindowRef = useRef(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (chatOpen && messages.length === 0) {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n//         { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n//       ]);\n//     }\n//   }, [chatOpen, messages.length]);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleOptionClick = async (option) => {\n//     setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n//     if (option === 'Product Information') {\n//       const res = await fetch('http://localhost:4000/api/product-information', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (question.trim()) {\n//       setMessages((prevMessages) => [...prevMessages, { user: question, bot: '' }]);\n//       const res = await fetch('http://localhost:4000/api/product-information-followup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ question, sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setQuestion('');\n//     } else {\n//       alert('Please enter a question.');\n//     }\n//   };\n\n//   const toggleChat = () => {\n//     setChatOpen(!chatOpen);\n//   };\n\n//   const handleEndSession = () => {\n//     setSessionId(uuidv4());\n//     setMessages([]);\n//     setChatOpen(false);\n//   };\n\n//   const handleClickOutside = (e) => {\n//     if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n//       setChatOpen(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const scrollToBottom = () => {\n//     if (messagesEndRef.current) {\n//       messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n//         <div className=\"bubble-icon\">ðŸ’¬</div>\n//       </div>\n//       {chatOpen && (\n//         <div className=\"chat-window\" ref={chatWindowRef}>\n//           <div className=\"chat-header\">\n//             <span>Furniture Store Assistant</span>\n//             <button className=\"close-btn\" onClick={toggleChat}>Ã—</button>\n//           </div>\n//           <div className=\"chat-body\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"chat-message\">\n//                 {msg.user && <div className=\"user-message\">{msg.user}</div>}\n//                 {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n//                 {msg.options && (\n//                   <div className=\"options\">\n//                     {msg.options.map((option, i) => (\n//                       <button key={i} onClick={() => handleOptionClick(option)} className=\"option-button\">\n//                         {option}\n//                       </button>\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           <form onSubmit={handleSubmit} className=\"chat-form\">\n//             <input\n//               type=\"text\"\n//               value={question}\n//               onChange={(e) => setQuestion(e.target.value)}\n//               placeholder=\"Type your message\"\n//               className=\"chat-input\"\n//             />\n//             <button type=\"submit\" className=\"chat-submit\">Send</button>\n//           </form>\n//           <button onClick={handleEndSession} className=\"end-session-btn\">Close Session</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button, TextField, IconButton, Paper, Typography } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport CloseIcon from '@mui/icons-material/Close';\nconst App = () => {\n  const [question, setQuestion] = useState('');\n  const [sessionId, setSessionId] = useState(uuidv4());\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [orderNumber, setOrderNumber] = useState('');\n  const [issueDescription, setIssueDescription] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n  const [showTicketForm, setShowTicketForm] = useState(false);\n  const [showAdditionalForm, setShowAdditionalForm] = useState(false);\n  const chatWindowRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (chatOpen && messages.length === 0) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?'\n      }, {\n        user: '',\n        bot: '',\n        options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order']\n      }]);\n    }\n  }, [chatOpen, messages.length]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleOptionClick = async option => {\n    setMessages(prevMessages => [...prevMessages, {\n      user: option,\n      bot: ''\n    }]);\n    if (option === 'Product Information') {\n      const res = await fetch('http://localhost:4000/api/product-information', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sessionId\n        })\n      });\n      const data = await res.json();\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n    } else if (option === 'Submit a Ticket for Damaged Product') {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: 'Please provide your order number, a description of the issue, and a photo of the damage.'\n      }]);\n      setShowTicketForm(true);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: `Option \"${option}\" selected. Feature to be implemented.`\n      }]);\n    }\n  };\n  const handleTicketSubmission = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('orderNumber', orderNumber);\n    formData.append('issueDescription', issueDescription);\n    formData.append('sessionId', sessionId);\n    if (photo) {\n      formData.append('photo', photo);\n    }\n    const res = await fetch('http://localhost:4000/api/submit-ticket', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await res.json();\n    if (data.error) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.error\n      }]);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n      setShowTicketForm(false);\n      setShowAdditionalForm(true);\n    }\n    setOrderNumber('');\n    setIssueDescription('');\n    setPhoto(null);\n    setPhotoPreview(null);\n  };\n  const handleAdditionalInfoSubmission = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('sessionId', sessionId);\n    formData.append('answer', question);\n    if (photo) {\n      formData.append('additionalPhoto', photo);\n    }\n    const res = await fetch('http://localhost:4000/api/submit-additional-info', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await res.json();\n    if (data.error) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.error\n      }]);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: question,\n        bot: data.response\n      }]);\n      setShowAdditionalForm(true);\n      setQuestion('');\n      setPhoto(null);\n      setPhotoPreview(null);\n    }\n  };\n  const handlePhotoChange = e => {\n    const file = e.target.files[0];\n    setPhoto(file);\n    setPhotoPreview(URL.createObjectURL(file));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (question.trim()) {\n      const userMessage = {\n        user: question,\n        bot: ''\n      };\n      setMessages(prevMessages => [...prevMessages, userMessage]);\n      setQuestion('');\n      const formData = new FormData();\n      formData.append('question', question);\n      formData.append('sessionId', sessionId);\n      if (photo) {\n        formData.append('additionalPhoto', photo);\n      }\n      const res = await fetch('http://localhost:4000/api/product-information-followup', {\n        method: 'POST',\n        body: formData\n      });\n      const data = await res.json();\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n      setPhoto(null);\n      setPhotoPreview(null);\n    } else {\n      alert('Please enter a question.');\n    }\n  };\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n  const handleEndSession = () => {\n    setSessionId(uuidv4());\n    setMessages([]);\n    setChatOpen(false);\n  };\n  const handleClickOutside = e => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `chat-bubble ${chatOpen ? 'open' : ''}`,\n    onClick: toggleChat,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    role: \"img\",\n    \"aria-label\": \"chat icon\",\n    className: \"bubble-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  }, \"\\uD83D\\uDCAC\")), chatOpen && /*#__PURE__*/React.createElement(Paper, {\n    elevation: 3,\n    className: \"chat-window\",\n    ref: chatWindowRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 13\n    }\n  }, \"Furniture Store Assistant\"), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: toggleChat,\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CloseIcon, {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chat-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 345,\n      columnNumber: 11\n    }\n  }, messages.map((msg, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"chat-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, msg.user && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 30\n    }\n  }, msg.user), msg.bot && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bot-response\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 29\n    }\n  }, msg.bot), msg.options && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 19\n    }\n  }, msg.options.map((option, i) => /*#__PURE__*/React.createElement(Button, {\n    key: i,\n    variant: \"contained\",\n    onClick: () => handleOptionClick(option),\n    className: \"option-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 23\n    }\n  }, option))), msg.photo && /*#__PURE__*/React.createElement(\"img\", {\n    src: msg.photo,\n    alt: \"Uploaded\",\n    className: \"chat-photo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 31\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    ref: messagesEndRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 13\n    }\n  })), showTicketForm && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleTicketSubmission,\n    className: \"chat-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    value: orderNumber,\n    onChange: e => setOrderNumber(e.target.value),\n    placeholder: \"Order Number\",\n    className: \"chat-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    multiline: true,\n    rows: 4,\n    value: issueDescription,\n    onChange: e => setIssueDescription(e.target.value),\n    placeholder: \"Issue Description\",\n    className: \"chat-input\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handlePhotoChange,\n    className: \"chat-input\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 15\n    }\n  }), photoPreview && /*#__PURE__*/React.createElement(\"img\", {\n    src: photoPreview,\n    alt: \"Preview\",\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"chat-submit\",\n    endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 106\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 15\n    }\n  }, \"Submit Ticket\")), showAdditionalForm && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleAdditionalInfoSubmission,\n    className: \"chat-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    value: question,\n    onChange: e => setQuestion(e.target.value),\n    placeholder: \"Type your answer here\",\n    className: \"chat-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    name: \"additionalPhoto\",\n    onChange: handlePhotoChange,\n    className: \"chat-input\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 15\n    }\n  }), photoPreview && /*#__PURE__*/React.createElement(\"img\", {\n    src: photoPreview,\n    alt: \"Preview\",\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"chat-submit\",\n    endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 106\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 15\n    }\n  }, \"Send\")), !showTicketForm && !showAdditionalForm && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"chat-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 422,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    fullWidth: true,\n    value: question,\n    onChange: e => setQuestion(e.target.value),\n    placeholder: \"Type your message\",\n    className: \"chat-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 423,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: handlePhotoChange,\n    className: \"chat-input\",\n    accept: \"image/*\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 431,\n      columnNumber: 15\n    }\n  }), photoPreview && /*#__PURE__*/React.createElement(\"img\", {\n    src: photoPreview,\n    alt: \"Preview\",\n    className: \"photo-preview\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: \"chat-submit\",\n    endIcon: /*#__PURE__*/React.createElement(SendIcon, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 106\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 15\n    }\n  }, \"Send\")), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleEndSession,\n    variant: \"contained\",\n    color: \"secondary\",\n    className: \"end-session-btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 11\n    }\n  }, \"Close Session\")));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useRef","useEffect","v4","uuidv4","Button","TextField","IconButton","Paper","Typography","SendIcon","CloseIcon","App","question","setQuestion","sessionId","setSessionId","chatOpen","setChatOpen","messages","setMessages","orderNumber","setOrderNumber","issueDescription","setIssueDescription","photo","setPhoto","photoPreview","setPhotoPreview","showTicketForm","setShowTicketForm","showAdditionalForm","setShowAdditionalForm","chatWindowRef","messagesEndRef","length","prevMessages","user","bot","options","scrollToBottom","handleOptionClick","option","res","fetch","method","headers","body","JSON","stringify","data","json","response","handleTicketSubmission","e","preventDefault","formData","FormData","append","error","handleAdditionalInfoSubmission","handlePhotoChange","file","target","files","URL","createObjectURL","handleSubmit","trim","userMessage","alert","toggleChat","handleEndSession","handleClickOutside","current","contains","document","addEventListener","removeEventListener","scrollIntoView","behavior","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","role","elevation","ref","variant","size","style","color","map","msg","index","key","i","src","alt","onSubmit","fullWidth","value","onChange","placeholder","required","multiline","rows","type","accept","endIcon","name"],"sources":["/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n// import { v4 as uuidv4 } from 'uuid';\n\n// const App = () => {\n//   const [question, setQuestion] = useState('');\n//   const [sessionId, setSessionId] = useState(uuidv4());\n//   const [chatOpen, setChatOpen] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const chatWindowRef = useRef(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (chatOpen && messages.length === 0) {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n//         { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n//       ]);\n//     }\n//   }, [chatOpen, messages.length]);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleOptionClick = async (option) => {\n//     setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n//     if (option === 'Product Information') {\n//       const res = await fetch('http://localhost:4000/api/product-information', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (question.trim()) {\n//       setMessages((prevMessages) => [...prevMessages, { user: question, bot: '' }]);\n//       const res = await fetch('http://localhost:4000/api/product-information-followup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ question, sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setQuestion('');\n//     } else {\n//       alert('Please enter a question.');\n//     }\n//   };\n\n//   const toggleChat = () => {\n//     setChatOpen(!chatOpen);\n//   };\n\n//   const handleEndSession = () => {\n//     setSessionId(uuidv4());\n//     setMessages([]);\n//     setChatOpen(false);\n//   };\n\n//   const handleClickOutside = (e) => {\n//     if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n//       setChatOpen(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const scrollToBottom = () => {\n//     if (messagesEndRef.current) {\n//       messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n//         <div className=\"bubble-icon\">ðŸ’¬</div>\n//       </div>\n//       {chatOpen && (\n//         <div className=\"chat-window\" ref={chatWindowRef}>\n//           <div className=\"chat-header\">\n//             <span>Furniture Store Assistant</span>\n//             <button className=\"close-btn\" onClick={toggleChat}>Ã—</button>\n//           </div>\n//           <div className=\"chat-body\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"chat-message\">\n//                 {msg.user && <div className=\"user-message\">{msg.user}</div>}\n//                 {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n//                 {msg.options && (\n//                   <div className=\"options\">\n//                     {msg.options.map((option, i) => (\n//                       <button key={i} onClick={() => handleOptionClick(option)} className=\"option-button\">\n//                         {option}\n//                       </button>\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           <form onSubmit={handleSubmit} className=\"chat-form\">\n//             <input\n//               type=\"text\"\n//               value={question}\n//               onChange={(e) => setQuestion(e.target.value)}\n//               placeholder=\"Type your message\"\n//               className=\"chat-input\"\n//             />\n//             <button type=\"submit\" className=\"chat-submit\">Send</button>\n//           </form>\n//           <button onClick={handleEndSession} className=\"end-session-btn\">Close Session</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\n\n\n\n\n\n\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Button, TextField, IconButton, Paper, Typography } from '@mui/material';\nimport SendIcon from '@mui/icons-material/Send';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst App = () => {\n  const [question, setQuestion] = useState('');\n  const [sessionId, setSessionId] = useState(uuidv4());\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [orderNumber, setOrderNumber] = useState('');\n  const [issueDescription, setIssueDescription] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [photoPreview, setPhotoPreview] = useState(null);\n  const [showTicketForm, setShowTicketForm] = useState(false);\n  const [showAdditionalForm, setShowAdditionalForm] = useState(false);\n  const chatWindowRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    if (chatOpen && messages.length === 0) {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n        { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n      ]);\n    }\n  }, [chatOpen, messages.length]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleOptionClick = async (option) => {\n    setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n    if (option === 'Product Information') {\n      const res = await fetch('http://localhost:4000/api/product-information', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ sessionId }),\n      });\n\n      const data = await res.json();\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n    } else if (option === 'Submit a Ticket for Damaged Product') {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { user: '', bot: 'Please provide your order number, a description of the issue, and a photo of the damage.' }\n      ]);\n      setShowTicketForm(true);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n    }\n  };\n\n  const handleTicketSubmission = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('orderNumber', orderNumber);\n    formData.append('issueDescription', issueDescription);\n    formData.append('sessionId', sessionId);\n    if (photo) {\n      formData.append('photo', photo);\n    }\n\n    const res = await fetch('http://localhost:4000/api/submit-ticket', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const data = await res.json();\n    if (data.error) {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n      setShowTicketForm(false);\n      setShowAdditionalForm(true);\n    }\n\n    setOrderNumber('');\n    setIssueDescription('');\n    setPhoto(null);\n    setPhotoPreview(null);\n  };\n\n  const handleAdditionalInfoSubmission = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('sessionId', sessionId);\n    formData.append('answer', question);\n    if (photo) {\n      formData.append('additionalPhoto', photo);\n    }\n\n    const res = await fetch('http://localhost:4000/api/submit-additional-info', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const data = await res.json();\n    if (data.error) {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: question, bot: data.response }]);\n      setShowAdditionalForm(true);\n      setQuestion('');\n      setPhoto(null);\n      setPhotoPreview(null);\n    }\n  };\n\n  const handlePhotoChange = (e) => {\n    const file = e.target.files[0];\n    setPhoto(file);\n    setPhotoPreview(URL.createObjectURL(file));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (question.trim()) {\n      const userMessage = { user: question, bot: '' };\n      setMessages((prevMessages) => [...prevMessages, userMessage]);\n      setQuestion('');\n\n      const formData = new FormData();\n      formData.append('question', question);\n      formData.append('sessionId', sessionId);\n      if (photo) {\n        formData.append('additionalPhoto', photo);\n      }\n\n      const res = await fetch('http://localhost:4000/api/product-information-followup', {\n        method: 'POST',\n        body: formData,\n      });\n\n      const data = await res.json();\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n      setPhoto(null);\n      setPhotoPreview(null);\n    } else {\n      alert('Please enter a question.');\n    }\n  };\n\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n\n  const handleEndSession = () => {\n    setSessionId(uuidv4());\n    setMessages([]);\n    setChatOpen(false);\n  };\n\n  const handleClickOutside = (e) => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n        <span role=\"img\" aria-label=\"chat icon\" className=\"bubble-icon\">ðŸ’¬</span>\n      </div>\n      {chatOpen && (\n        <Paper elevation={3} className=\"chat-window\" ref={chatWindowRef}>\n          <div className=\"chat-header\">\n            <Typography variant=\"h6\">Furniture Store Assistant</Typography>\n            <IconButton onClick={toggleChat} size=\"small\">\n              <CloseIcon style={{ color: 'white' }} />\n            </IconButton>\n          </div>\n          <div className=\"chat-body\">\n            {messages.map((msg, index) => (\n              <div key={index} className=\"chat-message\">\n                {msg.user && <div className=\"user-message\">{msg.user}</div>}\n                {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n                {msg.options && (\n                  <div className=\"options\">\n                    {msg.options.map((option, i) => (\n                      <Button key={i} variant=\"contained\" onClick={() => handleOptionClick(option)} className=\"option-button\">\n                        {option}\n                      </Button>\n                    ))}\n                  </div>\n                )}\n                {msg.photo && <img src={msg.photo} alt=\"Uploaded\" className=\"chat-photo\" />}\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n          {showTicketForm && (\n            <form onSubmit={handleTicketSubmission} className=\"chat-form\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                value={orderNumber}\n                onChange={(e) => setOrderNumber(e.target.value)}\n                placeholder=\"Order Number\"\n                className=\"chat-input\"\n                required\n              />\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                multiline\n                rows={4}\n                value={issueDescription}\n                onChange={(e) => setIssueDescription(e.target.value)}\n                placeholder=\"Issue Description\"\n                className=\"chat-input\"\n                required\n              />\n              <input\n                type=\"file\"\n                onChange={handlePhotoChange}\n                className=\"chat-input\"\n                accept=\"image/*\"\n              />\n              {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n                Submit Ticket\n              </Button>\n            </form>\n          )}\n          {showAdditionalForm && (\n            <form onSubmit={handleAdditionalInfoSubmission} className=\"chat-form\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                value={question}\n                onChange={(e) => setQuestion(e.target.value)}\n                placeholder=\"Type your answer here\"\n                className=\"chat-input\"\n              />\n              <input\n                type=\"file\"\n                name=\"additionalPhoto\"\n                onChange={handlePhotoChange}\n                className=\"chat-input\"\n                accept=\"image/*\"\n              />\n              {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n                Send\n              </Button>\n            </form>\n          )}\n          {!showTicketForm && !showAdditionalForm && (\n            <form onSubmit={handleSubmit} className=\"chat-form\">\n              <TextField\n                variant=\"outlined\"\n                fullWidth\n                value={question}\n                onChange={(e) => setQuestion(e.target.value)}\n                placeholder=\"Type your message\"\n                className=\"chat-input\"\n              />\n              <input\n                type=\"file\"\n                onChange={handlePhotoChange}\n                className=\"chat-input\"\n                accept=\"image/*\"\n              />\n              {photoPreview && <img src={photoPreview} alt=\"Preview\" className=\"photo-preview\" />}\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className=\"chat-submit\" endIcon={<SendIcon />}>\n                Send\n              </Button>\n            </form>\n          )}\n          <Button onClick={handleEndSession} variant=\"contained\" color=\"secondary\" className=\"end-session-btn\">\n            Close Session\n          </Button>\n        </Paper>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n\n\n\n\n\n\n\n\n\n\n\n\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAUA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC,SAASC,MAAM,EAAEC,SAAS,EAAEC,UAAU,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAChF,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,SAAS,MAAM,2BAA2B;AAEjD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC;EACpD,MAAM,CAACa,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmB,QAAQ,EAAEC,WAAW,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC5C,M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","ignoreList":[]},"metadata":{},"sourceType":"module"}