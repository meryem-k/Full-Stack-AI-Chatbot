{"ast":null,"code":"var _jsxFileName = \"/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js\",\n  _s = $RefreshSig$();\n// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n// import { v4 as uuidv4 } from 'uuid';\n\n// const App = () => {\n//   const [question, setQuestion] = useState('');\n//   const [sessionId, setSessionId] = useState(uuidv4());\n//   const [chatOpen, setChatOpen] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const chatWindowRef = useRef(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (chatOpen && messages.length === 0) {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n//         { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n//       ]);\n//     }\n//   }, [chatOpen, messages.length]);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleOptionClick = async (option) => {\n//     setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n//     if (option === 'Product Information') {\n//       const res = await fetch('http://localhost:4000/api/product-information', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (question.trim()) {\n//       setMessages((prevMessages) => [...prevMessages, { user: question, bot: '' }]);\n//       const res = await fetch('http://localhost:4000/api/product-information-followup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ question, sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setQuestion('');\n//     } else {\n//       alert('Please enter a question.');\n//     }\n//   };\n\n//   const toggleChat = () => {\n//     setChatOpen(!chatOpen);\n//   };\n\n//   const handleEndSession = () => {\n//     setSessionId(uuidv4());\n//     setMessages([]);\n//     setChatOpen(false);\n//   };\n\n//   const handleClickOutside = (e) => {\n//     if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n//       setChatOpen(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const scrollToBottom = () => {\n//     if (messagesEndRef.current) {\n//       messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n//         <div className=\"bubble-icon\">ðŸ’¬</div>\n//       </div>\n//       {chatOpen && (\n//         <div className=\"chat-window\" ref={chatWindowRef}>\n//           <div className=\"chat-header\">\n//             <span>Furniture Store Assistant</span>\n//             <button className=\"close-btn\" onClick={toggleChat}>Ã—</button>\n//           </div>\n//           <div className=\"chat-body\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"chat-message\">\n//                 {msg.user && <div className=\"user-message\">{msg.user}</div>}\n//                 {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n//                 {msg.options && (\n//                   <div className=\"options\">\n//                     {msg.options.map((option, i) => (\n//                       <button key={i} onClick={() => handleOptionClick(option)} className=\"option-button\">\n//                         {option}\n//                       </button>\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           <form onSubmit={handleSubmit} className=\"chat-form\">\n//             <input\n//               type=\"text\"\n//               value={question}\n//               onChange={(e) => setQuestion(e.target.value)}\n//               placeholder=\"Type your message\"\n//               className=\"chat-input\"\n//             />\n//             <button type=\"submit\" className=\"chat-submit\">Send</button>\n//           </form>\n//           <button onClick={handleEndSession} className=\"end-session-btn\">Close Session</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [question, setQuestion] = useState('');\n  const [sessionId, setSessionId] = useState(uuidv4());\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [orderNumber, setOrderNumber] = useState('');\n  const [issueDescription, setIssueDescription] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [showTicketForm, setShowTicketForm] = useState(false);\n  const [showAdditionalForm, setShowAdditionalForm] = useState(false);\n  const [additionalInfo, setAdditionalInfo] = useState({\n    receivedDate: '',\n    packagingDamage: '',\n    originalPackaging: false,\n    additionalPhoto: null\n  });\n  const chatWindowRef = useRef(null);\n  const messagesEndRef = useRef(null);\n  useEffect(() => {\n    if (chatOpen && messages.length === 0) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?'\n      }, {\n        user: '',\n        bot: '',\n        options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order']\n      }]);\n    }\n  }, [chatOpen, messages.length]);\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const handleOptionClick = async option => {\n    setMessages(prevMessages => [...prevMessages, {\n      user: option,\n      bot: ''\n    }]);\n    if (option === 'Product Information') {\n      const res = await fetch('http://localhost:4000/api/product-information', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sessionId\n        })\n      });\n      const data = await res.json();\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n    } else if (option === 'Submit a Ticket for Damaged Product') {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: 'Please provide your order number, a description of the issue, and a photo of the damage.'\n      }]);\n      setShowTicketForm(true);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: `Option \"${option}\" selected. Feature to be implemented.`\n      }]);\n    }\n  };\n  const handleTicketSubmission = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('orderNumber', orderNumber);\n    formData.append('issueDescription', issueDescription);\n    formData.append('sessionId', sessionId);\n    if (photo) {\n      formData.append('photo', photo);\n    }\n    const res = await fetch('http://localhost:4000/api/submit-ticket', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await res.json();\n    if (data.error) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.error\n      }]);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n      setShowTicketForm(false);\n      setShowAdditionalForm(true);\n    }\n    setOrderNumber('');\n    setIssueDescription('');\n    setPhoto(null);\n  };\n  const handleAdditionalInfoSubmission = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('sessionId', sessionId);\n    formData.append('receivedDate', additionalInfo.receivedDate);\n    formData.append('packagingDamage', additionalInfo.packagingDamage);\n    formData.append('originalPackaging', additionalInfo.originalPackaging);\n    if (additionalInfo.additionalPhoto) {\n      formData.append('additionalPhoto', additionalInfo.additionalPhoto);\n    }\n    const res = await fetch('http://localhost:4000/api/submit-additional-info', {\n      method: 'POST',\n      body: formData\n    });\n    const data = await res.json();\n    if (data.error) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.error\n      }]);\n    } else {\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n      setShowAdditionalForm(false);\n    }\n  };\n  const handleAdditionalInfoChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked,\n      files\n    } = e.target;\n    setAdditionalInfo(prevInfo => ({\n      ...prevInfo,\n      [name]: type === 'checkbox' ? checked : type === 'file' ? files[0] : value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (question.trim()) {\n      setMessages(prevMessages => [...prevMessages, {\n        user: question,\n        bot: ''\n      }]);\n      const res = await fetch('http://localhost:4000/api/product-information-followup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question,\n          sessionId\n        })\n      });\n      const data = await res.json();\n      setMessages(prevMessages => [...prevMessages, {\n        user: '',\n        bot: data.response\n      }]);\n      setQuestion('');\n    } else {\n      alert('Please enter a question.');\n    }\n  };\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n  const handleEndSession = () => {\n    setSessionId(uuidv4());\n    setMessages([]);\n    setChatOpen(false);\n  };\n  const handleClickOutside = e => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `chat-bubble ${chatOpen ? 'open' : ''}`,\n      onClick: toggleChat,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bubble-icon\",\n        children: \"\\uD83D\\uDCAC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), chatOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      ref: chatWindowRef,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Furniture Store Assistant\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-btn\",\n          onClick: toggleChat,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: [messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-message\",\n          children: [msg.user && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-message\",\n            children: msg.user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 30\n          }, this), msg.bot && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bot-response\",\n            children: msg.bot\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 29\n          }, this), msg.options && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"options\",\n            children: msg.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOptionClick(option),\n              className: \"option-button\",\n              children: option\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 15\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messagesEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), showTicketForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleTicketSubmission,\n        className: \"chat-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: orderNumber,\n          onChange: e => setOrderNumber(e.target.value),\n          placeholder: \"Order Number\",\n          className: \"chat-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: issueDescription,\n          onChange: e => setIssueDescription(e.target.value),\n          placeholder: \"Issue Description\",\n          className: \"chat-input\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          onChange: e => setPhoto(e.target.files[0]),\n          className: \"chat-input\",\n          accept: \"image/*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat-submit\",\n          children: \"Submit Ticket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 13\n      }, this), showAdditionalForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAdditionalInfoSubmission,\n        className: \"chat-form\",\n        children: [sessionState[sessionId].step === 'awaitingDeliveryDate' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"chat-label\",\n            children: \"When did you receive the delivery?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"date\",\n            name: \"receivedDate\",\n            className: \"chat-input\",\n            value: additionalInfo.receivedDate,\n            onChange: handleAdditionalInfoChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), sessionState[sessionId].step === 'awaitingPackagingDamage' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"chat-label\",\n            children: \"Was the packaging damaged from the outside?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"packagingDamage\",\n            className: \"chat-input\",\n            value: additionalInfo.packagingDamage,\n            onChange: handleAdditionalInfoChange,\n            required: true,\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"yes\",\n              children: \"Yes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"no\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), sessionState[sessionId].step === 'awaitingPackagingPhoto' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"chat-label\",\n            children: \"Do you have photos of the damaged packaging?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"additionalPhoto\",\n            className: \"chat-input\",\n            accept: \"image/*\",\n            onChange: handleAdditionalInfoChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), sessionState[sessionId].step === 'awaitingOriginalPackaging' && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"chat-label\",\n            children: \"Do you have the original packaging and the box?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 419,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"originalPackaging\",\n            checked: additionalInfo.originalPackaging,\n            onChange: handleAdditionalInfoChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat-submit\",\n          children: \"Submit Additional Info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"chat-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          placeholder: \"Type your message\",\n          className: \"chat-input\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat-submit\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEndSession,\n        className: \"end-session-btn\",\n        children: \"Close Session\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 325,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 320,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4bdTPHsk6iZB0GdmhAx6nUQounE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","question","setQuestion","sessionId","setSessionId","chatOpen","setChatOpen","messages","setMessages","orderNumber","setOrderNumber","issueDescription","setIssueDescription","photo","setPhoto","showTicketForm","setShowTicketForm","showAdditionalForm","setShowAdditionalForm","additionalInfo","setAdditionalInfo","receivedDate","packagingDamage","originalPackaging","additionalPhoto","chatWindowRef","messagesEndRef","length","prevMessages","user","bot","options","scrollToBottom","handleOptionClick","option","res","fetch","method","headers","body","JSON","stringify","data","json","response","handleTicketSubmission","e","preventDefault","formData","FormData","append","error","handleAdditionalInfoSubmission","handleAdditionalInfoChange","name","value","type","checked","files","target","prevInfo","handleSubmit","trim","alert","toggleChat","handleEndSession","handleClickOutside","current","contains","document","addEventListener","removeEventListener","scrollIntoView","behavior","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","map","msg","index","i","onSubmit","onChange","placeholder","required","accept","sessionState","step","_c","$RefreshReg$"],"sources":["/Users/smkar/Documents/VsCode/ai-chatbot/frontend-react/src/App.js"],"sourcesContent":["// import React, { useState, useRef, useEffect } from 'react';\n// import './App.css';\n// import { v4 as uuidv4 } from 'uuid';\n\n// const App = () => {\n//   const [question, setQuestion] = useState('');\n//   const [sessionId, setSessionId] = useState(uuidv4());\n//   const [chatOpen, setChatOpen] = useState(false);\n//   const [messages, setMessages] = useState([]);\n//   const chatWindowRef = useRef(null);\n//   const messagesEndRef = useRef(null);\n\n//   useEffect(() => {\n//     if (chatOpen && messages.length === 0) {\n//       setMessages((prevMessages) => [\n//         ...prevMessages,\n//         { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n//         { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n//       ]);\n//     }\n//   }, [chatOpen, messages.length]);\n\n//   useEffect(() => {\n//     scrollToBottom();\n//   }, [messages]);\n\n//   const handleOptionClick = async (option) => {\n//     setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n//     if (option === 'Product Information') {\n//       const res = await fetch('http://localhost:4000/api/product-information', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//     } else {\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n//     }\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     if (question.trim()) {\n//       setMessages((prevMessages) => [...prevMessages, { user: question, bot: '' }]);\n//       const res = await fetch('http://localhost:4000/api/product-information-followup', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ question, sessionId }),\n//       });\n\n//       const data = await res.json();\n//       setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n//       setQuestion('');\n//     } else {\n//       alert('Please enter a question.');\n//     }\n//   };\n\n//   const toggleChat = () => {\n//     setChatOpen(!chatOpen);\n//   };\n\n//   const handleEndSession = () => {\n//     setSessionId(uuidv4());\n//     setMessages([]);\n//     setChatOpen(false);\n//   };\n\n//   const handleClickOutside = (e) => {\n//     if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n//       setChatOpen(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     document.addEventListener('mousedown', handleClickOutside);\n//     return () => {\n//       document.removeEventListener('mousedown', handleClickOutside);\n//     };\n//   }, []);\n\n//   const scrollToBottom = () => {\n//     if (messagesEndRef.current) {\n//       messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n//     }\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n//         <div className=\"bubble-icon\">ðŸ’¬</div>\n//       </div>\n//       {chatOpen && (\n//         <div className=\"chat-window\" ref={chatWindowRef}>\n//           <div className=\"chat-header\">\n//             <span>Furniture Store Assistant</span>\n//             <button className=\"close-btn\" onClick={toggleChat}>Ã—</button>\n//           </div>\n//           <div className=\"chat-body\">\n//             {messages.map((msg, index) => (\n//               <div key={index} className=\"chat-message\">\n//                 {msg.user && <div className=\"user-message\">{msg.user}</div>}\n//                 {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n//                 {msg.options && (\n//                   <div className=\"options\">\n//                     {msg.options.map((option, i) => (\n//                       <button key={i} onClick={() => handleOptionClick(option)} className=\"option-button\">\n//                         {option}\n//                       </button>\n//                     ))}\n//                   </div>\n//                 )}\n//               </div>\n//             ))}\n//             <div ref={messagesEndRef} />\n//           </div>\n//           <form onSubmit={handleSubmit} className=\"chat-form\">\n//             <input\n//               type=\"text\"\n//               value={question}\n//               onChange={(e) => setQuestion(e.target.value)}\n//               placeholder=\"Type your message\"\n//               className=\"chat-input\"\n//             />\n//             <button type=\"submit\" className=\"chat-submit\">Send</button>\n//           </form>\n//           <button onClick={handleEndSession} className=\"end-session-btn\">Close Session</button>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n\n// export default App;\n\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst App = () => {\n  const [question, setQuestion] = useState('');\n  const [sessionId, setSessionId] = useState(uuidv4());\n  const [chatOpen, setChatOpen] = useState(false);\n  const [messages, setMessages] = useState([]);\n  const [orderNumber, setOrderNumber] = useState('');\n  const [issueDescription, setIssueDescription] = useState('');\n  const [photo, setPhoto] = useState(null);\n  const [showTicketForm, setShowTicketForm] = useState(false);\n  const [showAdditionalForm, setShowAdditionalForm] = useState(false);\n  const [additionalInfo, setAdditionalInfo] = useState({\n    receivedDate: '',\n    packagingDamage: '',\n    originalPackaging: false,\n    additionalPhoto: null,\n  });\n  const chatWindowRef = useRef(null);\n  const messagesEndRef = useRef(null);\n\n  useEffect(() => {\n    if (chatOpen && messages.length === 0) {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { user: '', bot: 'Hello, welcome to our furniture store. My name is Eve and I am your customer representative. Please let me know how I can help you?' },\n        { user: '', bot: '', options: ['Product Information', 'Submit a Ticket for Damaged Product', 'Delivery Update', 'Place an Order'] }\n      ]);\n    }\n  }, [chatOpen, messages.length]);\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const handleOptionClick = async (option) => {\n    setMessages((prevMessages) => [...prevMessages, { user: option, bot: '' }]);\n    if (option === 'Product Information') {\n      const res = await fetch('http://localhost:4000/api/product-information', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ sessionId }),\n      });\n\n      const data = await res.json();\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n    } else if (option === 'Submit a Ticket for Damaged Product') {\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { user: '', bot: 'Please provide your order number, a description of the issue, and a photo of the damage.' }\n      ]);\n      setShowTicketForm(true);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: `Option \"${option}\" selected. Feature to be implemented.` }]);\n    }\n  };\n\n  const handleTicketSubmission = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('orderNumber', orderNumber);\n    formData.append('issueDescription', issueDescription);\n    formData.append('sessionId', sessionId);\n    if (photo) {\n      formData.append('photo', photo);\n    }\n\n    const res = await fetch('http://localhost:4000/api/submit-ticket', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const data = await res.json();\n    if (data.error) {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n      setShowTicketForm(false);\n      setShowAdditionalForm(true);\n    }\n\n    setOrderNumber('');\n    setIssueDescription('');\n    setPhoto(null);\n  };\n\n  const handleAdditionalInfoSubmission = async (e) => {\n    e.preventDefault();\n\n    const formData = new FormData();\n    formData.append('sessionId', sessionId);\n    formData.append('receivedDate', additionalInfo.receivedDate);\n    formData.append('packagingDamage', additionalInfo.packagingDamage);\n    formData.append('originalPackaging', additionalInfo.originalPackaging);\n    if (additionalInfo.additionalPhoto) {\n      formData.append('additionalPhoto', additionalInfo.additionalPhoto);\n    }\n\n    const res = await fetch('http://localhost:4000/api/submit-additional-info', {\n      method: 'POST',\n      body: formData,\n    });\n\n    const data = await res.json();\n    if (data.error) {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.error }]);\n    } else {\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n      setShowAdditionalForm(false);\n    }\n  };\n\n  const handleAdditionalInfoChange = (e) => {\n    const { name, value, type, checked, files } = e.target;\n    setAdditionalInfo((prevInfo) => ({\n      ...prevInfo,\n      [name]: type === 'checkbox' ? checked : type === 'file' ? files[0] : value,\n    }));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (question.trim()) {\n      setMessages((prevMessages) => [...prevMessages, { user: question, bot: '' }]);\n      const res = await fetch('http://localhost:4000/api/product-information-followup', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ question, sessionId }),\n      });\n\n      const data = await res.json();\n      setMessages((prevMessages) => [...prevMessages, { user: '', bot: data.response }]);\n      setQuestion('');\n    } else {\n      alert('Please enter a question.');\n    }\n  };\n\n  const toggleChat = () => {\n    setChatOpen(!chatOpen);\n  };\n\n  const handleEndSession = () => {\n    setSessionId(uuidv4());\n    setMessages([]);\n    setChatOpen(false);\n  };\n\n  const handleClickOutside = (e) => {\n    if (chatWindowRef.current && !chatWindowRef.current.contains(e.target)) {\n      setChatOpen(false);\n    }\n  };\n\n  useEffect(() => {\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  const scrollToBottom = () => {\n    if (messagesEndRef.current) {\n      messagesEndRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className={`chat-bubble ${chatOpen ? 'open' : ''}`} onClick={toggleChat}>\n        <div className=\"bubble-icon\">ðŸ’¬</div>\n      </div>\n      {chatOpen && (\n        <div className=\"chat-window\" ref={chatWindowRef}>\n          <div className=\"chat-header\">\n            <span>Furniture Store Assistant</span>\n            <button className=\"close-btn\" onClick={toggleChat}>Ã—</button>\n          </div>\n          <div className=\"chat-body\">\n            {messages.map((msg, index) => (\n              <div key={index} className=\"chat-message\">\n                {msg.user && <div className=\"user-message\">{msg.user}</div>}\n                {msg.bot && <div className=\"bot-response\">{msg.bot}</div>}\n                {msg.options && (\n                  <div className=\"options\">\n                    {msg.options.map((option, i) => (\n                      <button key={i} onClick={() => handleOptionClick(option)} className=\"option-button\">\n                        {option}\n                      </button>\n                    ))}\n                  </div>\n                )}\n              </div>\n            ))}\n            <div ref={messagesEndRef} />\n          </div>\n          {showTicketForm && (\n            <form onSubmit={handleTicketSubmission} className=\"chat-form\">\n              <input\n                type=\"text\"\n                value={orderNumber}\n                onChange={(e) => setOrderNumber(e.target.value)}\n                placeholder=\"Order Number\"\n                className=\"chat-input\"\n                required\n              />\n              <textarea\n                value={issueDescription}\n                onChange={(e) => setIssueDescription(e.target.value)}\n                placeholder=\"Issue Description\"\n                className=\"chat-input\"\n                required\n              />\n              <input\n                type=\"file\"\n                onChange={(e) => setPhoto(e.target.files[0])}\n                className=\"chat-input\"\n                accept=\"image/*\"\n              />\n              <button type=\"submit\" className=\"chat-submit\">Submit Ticket</button>\n            </form>\n          )}\n          {showAdditionalForm && (\n            <form onSubmit={handleAdditionalInfoSubmission} className=\"chat-form\">\n              {sessionState[sessionId].step === 'awaitingDeliveryDate' && (\n                <>\n                  <label className=\"chat-label\">When did you receive the delivery?</label>\n                  <input\n                    type=\"date\"\n                    name=\"receivedDate\"\n                    className=\"chat-input\"\n                    value={additionalInfo.receivedDate}\n                    onChange={handleAdditionalInfoChange}\n                    required\n                  />\n                </>\n              )}\n              {sessionState[sessionId].step === 'awaitingPackagingDamage' && (\n                <>\n                  <label className=\"chat-label\">Was the packaging damaged from the outside?</label>\n                  <select\n                    name=\"packagingDamage\"\n                    className=\"chat-input\"\n                    value={additionalInfo.packagingDamage}\n                    onChange={handleAdditionalInfoChange}\n                    required\n                  >\n                    <option value=\"\">Select...</option>\n                    <option value=\"yes\">Yes</option>\n                    <option value=\"no\">No</option>\n                  </select>\n                </>\n              )}\n              {sessionState[sessionId].step === 'awaitingPackagingPhoto' && (\n                <>\n                  <label className=\"chat-label\">Do you have photos of the damaged packaging?</label>\n                  <input\n                    type=\"file\"\n                    name=\"additionalPhoto\"\n                    className=\"chat-input\"\n                    accept=\"image/*\"\n                    onChange={handleAdditionalInfoChange}\n                  />\n                </>\n              )}\n              {sessionState[sessionId].step === 'awaitingOriginalPackaging' && (\n                <>\n                  <label className=\"chat-label\">Do you have the original packaging and the box?</label>\n                  <input\n                    type=\"checkbox\"\n                    name=\"originalPackaging\"\n                    checked={additionalInfo.originalPackaging}\n                    onChange={handleAdditionalInfoChange}\n                  />\n                </>\n              )}\n              <button type=\"submit\" className=\"chat-submit\">Submit Additional Info</button>\n            </form>\n          )}\n          <form onSubmit={handleSubmit} className=\"chat-form\">\n            <input\n              type=\"text\"\n              value={question}\n              onChange={(e) => setQuestion(e.target.value)}\n              placeholder=\"Type your message\"\n              className=\"chat-input\"\n            />\n            <button type=\"submit\" className=\"chat-submit\">Send</button>\n          </form>\n          <button onClick={handleEndSession} className=\"end-session-btn\">Close Session</button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAO,WAAW;AAClB,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAACI,MAAM,CAAC,CAAC,CAAC;EACpD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACqB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyB,cAAc,EAAEC,iBAAiB,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAAC2B,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAAC6B,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC;IACnD+B,YAAY,EAAE,EAAE;IAChBC,eAAe,EAAE,EAAE;IACnBC,iBAAiB,EAAE,KAAK;IACxBC,eAAe,EAAE;EACnB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAGlC,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMmC,cAAc,GAAGnC,MAAM,CAAC,IAAI,CAAC;EAEnCC,SAAS,CAAC,MAAM;IACd,IAAIa,QAAQ,IAAIE,QAAQ,CAACoB,MAAM,KAAK,CAAC,EAAE;MACrCnB,WAAW,CAAEoB,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAEC,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAE;MAAsI,CAAC,EACxJ;QAAED,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAE,EAAE;QAAEC,OAAO,EAAE,CAAC,qBAAqB,EAAE,qCAAqC,EAAE,iBAAiB,EAAE,gBAAgB;MAAE,CAAC,CACpI,CAAC;IACJ;EACF,CAAC,EAAE,CAAC1B,QAAQ,EAAEE,QAAQ,CAACoB,MAAM,CAAC,CAAC;EAE/BnC,SAAS,CAAC,MAAM;IACdwC,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACzB,QAAQ,CAAC,CAAC;EAEd,MAAM0B,iBAAiB,GAAG,MAAOC,MAAM,IAAK;IAC1C1B,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;MAAEC,IAAI,EAAEK,MAAM;MAAEJ,GAAG,EAAE;IAAG,CAAC,CAAC,CAAC;IAC3E,IAAII,MAAM,KAAK,qBAAqB,EAAE;MACpC,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+CAA+C,EAAE;QACvEC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEtC;QAAU,CAAC;MACpC,CAAC,CAAC;MAEF,MAAMuC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7BnC,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAEY,IAAI,CAACE;MAAS,CAAC,CAAC,CAAC;IACpF,CAAC,MAAM,IAAIV,MAAM,KAAK,qCAAqC,EAAE;MAC3D1B,WAAW,CAAEoB,YAAY,IAAK,CAC5B,GAAGA,YAAY,EACf;QAAEC,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAE;MAA2F,CAAC,CAC9G,CAAC;MACFd,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,MAAM;MACLR,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAE,WAAWI,MAAM;MAAyC,CAAC,CAAC,CAAC;IAChI;EACF,CAAC;EAED,MAAMW,sBAAsB,GAAG,MAAOC,CAAC,IAAK;IAC1CA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,aAAa,EAAEzC,WAAW,CAAC;IAC3CuC,QAAQ,CAACE,MAAM,CAAC,kBAAkB,EAAEvC,gBAAgB,CAAC;IACrDqC,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE/C,SAAS,CAAC;IACvC,IAAIU,KAAK,EAAE;MACTmC,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAErC,KAAK,CAAC;IACjC;IAEA,MAAMsB,GAAG,GAAG,MAAMC,KAAK,CAAC,yCAAyC,EAAE;MACjEC,MAAM,EAAE,MAAM;MACdE,IAAI,EAAES;IACR,CAAC,CAAC;IAEF,MAAMN,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7B,IAAID,IAAI,CAACS,KAAK,EAAE;MACd3C,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAEY,IAAI,CAACS;MAAM,CAAC,CAAC,CAAC;IACjF,CAAC,MAAM;MACL3C,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAEY,IAAI,CAACE;MAAS,CAAC,CAAC,CAAC;MAClF5B,iBAAiB,CAAC,KAAK,CAAC;MACxBE,qBAAqB,CAAC,IAAI,CAAC;IAC7B;IAEAR,cAAc,CAAC,EAAE,CAAC;IAClBE,mBAAmB,CAAC,EAAE,CAAC;IACvBE,QAAQ,CAAC,IAAI,CAAC;EAChB,CAAC;EAED,MAAMsC,8BAA8B,GAAG,MAAON,CAAC,IAAK;IAClDA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAE/C,SAAS,CAAC;IACvC6C,QAAQ,CAACE,MAAM,CAAC,cAAc,EAAE/B,cAAc,CAACE,YAAY,CAAC;IAC5D2B,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAE/B,cAAc,CAACG,eAAe,CAAC;IAClE0B,QAAQ,CAACE,MAAM,CAAC,mBAAmB,EAAE/B,cAAc,CAACI,iBAAiB,CAAC;IACtE,IAAIJ,cAAc,CAACK,eAAe,EAAE;MAClCwB,QAAQ,CAACE,MAAM,CAAC,iBAAiB,EAAE/B,cAAc,CAACK,eAAe,CAAC;IACpE;IAEA,MAAMW,GAAG,GAAG,MAAMC,KAAK,CAAC,kDAAkD,EAAE;MAC1EC,MAAM,EAAE,MAAM;MACdE,IAAI,EAAES;IACR,CAAC,CAAC;IAEF,MAAMN,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;IAC7B,IAAID,IAAI,CAACS,KAAK,EAAE;MACd3C,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAEY,IAAI,CAACS;MAAM,CAAC,CAAC,CAAC;IACjF,CAAC,MAAM;MACL3C,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAEY,IAAI,CAACE;MAAS,CAAC,CAAC,CAAC;MAClF1B,qBAAqB,CAAC,KAAK,CAAC;IAC9B;EACF,CAAC;EAED,MAAMmC,0BAA0B,GAAIP,CAAC,IAAK;IACxC,MAAM;MAAEQ,IAAI;MAAEC,KAAK;MAAEC,IAAI;MAAEC,OAAO;MAAEC;IAAM,CAAC,GAAGZ,CAAC,CAACa,MAAM;IACtDvC,iBAAiB,CAAEwC,QAAQ,KAAM;MAC/B,GAAGA,QAAQ;MACX,CAACN,IAAI,GAAGE,IAAI,KAAK,UAAU,GAAGC,OAAO,GAAGD,IAAI,KAAK,MAAM,GAAGE,KAAK,CAAC,CAAC,CAAC,GAAGH;IACvE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAMM,YAAY,GAAG,MAAOf,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI9C,QAAQ,CAAC6D,IAAI,CAAC,CAAC,EAAE;MACnBtD,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE5B,QAAQ;QAAE6B,GAAG,EAAE;MAAG,CAAC,CAAC,CAAC;MAC7E,MAAMK,GAAG,GAAG,MAAMC,KAAK,CAAC,wDAAwD,EAAE;QAChFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAExC,QAAQ;UAAEE;QAAU,CAAC;MAC9C,CAAC,CAAC;MAEF,MAAMuC,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,CAAC,CAAC;MAC7BnC,WAAW,CAAEoB,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAE;QAAEC,IAAI,EAAE,EAAE;QAAEC,GAAG,EAAEY,IAAI,CAACE;MAAS,CAAC,CAAC,CAAC;MAClF1C,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,MAAM;MACL6D,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB1D,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EAED,MAAM4D,gBAAgB,GAAGA,CAAA,KAAM;IAC7B7D,YAAY,CAACV,MAAM,CAAC,CAAC,CAAC;IACtBc,WAAW,CAAC,EAAE,CAAC;IACfF,WAAW,CAAC,KAAK,CAAC;EACpB,CAAC;EAED,MAAM4D,kBAAkB,GAAIpB,CAAC,IAAK;IAChC,IAAIrB,aAAa,CAAC0C,OAAO,IAAI,CAAC1C,aAAa,CAAC0C,OAAO,CAACC,QAAQ,CAACtB,CAAC,CAACa,MAAM,CAAC,EAAE;MACtErD,WAAW,CAAC,KAAK,CAAC;IACpB;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd6E,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEJ,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACXG,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEL,kBAAkB,CAAC;IAC/D,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMlC,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIN,cAAc,CAACyC,OAAO,EAAE;MAC1BzC,cAAc,CAACyC,OAAO,CAACK,cAAc,CAAC;QAAEC,QAAQ,EAAE;MAAS,CAAC,CAAC;IAC/D;EACF,CAAC;EAED,oBACE7E,OAAA;IAAK8E,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB/E,OAAA;MAAK8E,SAAS,EAAE,eAAerE,QAAQ,GAAG,MAAM,GAAG,EAAE,EAAG;MAACuE,OAAO,EAAEZ,UAAW;MAAAW,QAAA,eAC3E/E,OAAA;QAAK8E,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAE;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,EACL3E,QAAQ,iBACPT,OAAA;MAAK8E,SAAS,EAAC,aAAa;MAACO,GAAG,EAAExD,aAAc;MAAAkD,QAAA,gBAC9C/E,OAAA;QAAK8E,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1B/E,OAAA;UAAA+E,QAAA,EAAM;QAAyB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACtCpF,OAAA;UAAQ8E,SAAS,EAAC,WAAW;UAACE,OAAO,EAAEZ,UAAW;UAAAW,QAAA,EAAC;QAAC;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACNpF,OAAA;QAAK8E,SAAS,EAAC,WAAW;QAAAC,QAAA,GACvBpE,QAAQ,CAAC2E,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACvBxF,OAAA;UAAiB8E,SAAS,EAAC,cAAc;UAAAC,QAAA,GACtCQ,GAAG,CAACtD,IAAI,iBAAIjC,OAAA;YAAK8E,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEQ,GAAG,CAACtD;UAAI;YAAAgD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EAC1DG,GAAG,CAACrD,GAAG,iBAAIlC,OAAA;YAAK8E,SAAS,EAAC,cAAc;YAAAC,QAAA,EAAEQ,GAAG,CAACrD;UAAG;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,EACxDG,GAAG,CAACpD,OAAO,iBACVnC,OAAA;YAAK8E,SAAS,EAAC,SAAS;YAAAC,QAAA,EACrBQ,GAAG,CAACpD,OAAO,CAACmD,GAAG,CAAC,CAAChD,MAAM,EAAEmD,CAAC,kBACzBzF,OAAA;cAAgBgF,OAAO,EAAEA,CAAA,KAAM3C,iBAAiB,CAACC,MAAM,CAAE;cAACwC,SAAS,EAAC,eAAe;cAAAC,QAAA,EAChFzC;YAAM,GADImD,CAAC;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEN,CACT;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CACN;QAAA,GAXOI,KAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYV,CACN,CAAC,eACFpF,OAAA;UAAKqF,GAAG,EAAEvD;QAAe;UAAAmD,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,EACLjE,cAAc,iBACbnB,OAAA;QAAM0F,QAAQ,EAAEzC,sBAAuB;QAAC6B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAC3D/E,OAAA;UACE4D,IAAI,EAAC,MAAM;UACXD,KAAK,EAAE9C,WAAY;UACnB8E,QAAQ,EAAGzC,CAAC,IAAKpC,cAAc,CAACoC,CAAC,CAACa,MAAM,CAACJ,KAAK,CAAE;UAChDiC,WAAW,EAAC,cAAc;UAC1Bd,SAAS,EAAC,YAAY;UACtBe,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFpF,OAAA;UACE2D,KAAK,EAAE5C,gBAAiB;UACxB4E,QAAQ,EAAGzC,CAAC,IAAKlC,mBAAmB,CAACkC,CAAC,CAACa,MAAM,CAACJ,KAAK,CAAE;UACrDiC,WAAW,EAAC,mBAAmB;UAC/Bd,SAAS,EAAC,YAAY;UACtBe,QAAQ;QAAA;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC,eACFpF,OAAA;UACE4D,IAAI,EAAC,MAAM;UACX+B,QAAQ,EAAGzC,CAAC,IAAKhC,QAAQ,CAACgC,CAAC,CAACa,MAAM,CAACD,KAAK,CAAC,CAAC,CAAC,CAAE;UAC7CgB,SAAS,EAAC,YAAY;UACtBgB,MAAM,EAAC;QAAS;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjB,CAAC,eACFpF,OAAA;UAAQ4D,IAAI,EAAC,QAAQ;UAACkB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CACP,EACA/D,kBAAkB,iBACjBrB,OAAA;QAAM0F,QAAQ,EAAElC,8BAA+B;QAACsB,SAAS,EAAC,WAAW;QAAAC,QAAA,GAClEgB,YAAY,CAACxF,SAAS,CAAC,CAACyF,IAAI,KAAK,sBAAsB,iBACtDhG,OAAA,CAAAE,SAAA;UAAA6E,QAAA,gBACE/E,OAAA;YAAO8E,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAAkC;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACxEpF,OAAA;YACE4D,IAAI,EAAC,MAAM;YACXF,IAAI,EAAC,cAAc;YACnBoB,SAAS,EAAC,YAAY;YACtBnB,KAAK,EAAEpC,cAAc,CAACE,YAAa;YACnCkE,QAAQ,EAAElC,0BAA2B;YACrCoC,QAAQ;UAAA;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC;QAAA,eACF,CACH,EACAW,YAAY,CAACxF,SAAS,CAAC,CAACyF,IAAI,KAAK,yBAAyB,iBACzDhG,OAAA,CAAAE,SAAA;UAAA6E,QAAA,gBACE/E,OAAA;YAAO8E,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAA2C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACjFpF,OAAA;YACE0D,IAAI,EAAC,iBAAiB;YACtBoB,SAAS,EAAC,YAAY;YACtBnB,KAAK,EAAEpC,cAAc,CAACG,eAAgB;YACtCiE,QAAQ,EAAElC,0BAA2B;YACrCoC,QAAQ;YAAAd,QAAA,gBAER/E,OAAA;cAAQ2D,KAAK,EAAC,EAAE;cAAAoB,QAAA,EAAC;YAAS;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACnCpF,OAAA;cAAQ2D,KAAK,EAAC,KAAK;cAAAoB,QAAA,EAAC;YAAG;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAChCpF,OAAA;cAAQ2D,KAAK,EAAC,IAAI;cAAAoB,QAAA,EAAC;YAAE;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxB,CAAC;QAAA,eACT,CACH,EACAW,YAAY,CAACxF,SAAS,CAAC,CAACyF,IAAI,KAAK,wBAAwB,iBACxDhG,OAAA,CAAAE,SAAA;UAAA6E,QAAA,gBACE/E,OAAA;YAAO8E,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAA4C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClFpF,OAAA;YACE4D,IAAI,EAAC,MAAM;YACXF,IAAI,EAAC,iBAAiB;YACtBoB,SAAS,EAAC,YAAY;YACtBgB,MAAM,EAAC,SAAS;YAChBH,QAAQ,EAAElC;UAA2B;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA,eACF,CACH,EACAW,YAAY,CAACxF,SAAS,CAAC,CAACyF,IAAI,KAAK,2BAA2B,iBAC3DhG,OAAA,CAAAE,SAAA;UAAA6E,QAAA,gBACE/E,OAAA;YAAO8E,SAAS,EAAC,YAAY;YAAAC,QAAA,EAAC;UAA+C;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrFpF,OAAA;YACE4D,IAAI,EAAC,UAAU;YACfF,IAAI,EAAC,mBAAmB;YACxBG,OAAO,EAAEtC,cAAc,CAACI,iBAAkB;YAC1CgE,QAAQ,EAAElC;UAA2B;YAAAwB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC;QAAA,eACF,CACH,eACDpF,OAAA;UAAQ4D,IAAI,EAAC,QAAQ;UAACkB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAsB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE,CACP,eACDpF,OAAA;QAAM0F,QAAQ,EAAEzB,YAAa;QAACa,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACjD/E,OAAA;UACE4D,IAAI,EAAC,MAAM;UACXD,KAAK,EAAEtD,QAAS;UAChBsF,QAAQ,EAAGzC,CAAC,IAAK5C,WAAW,CAAC4C,CAAC,CAACa,MAAM,CAACJ,KAAK,CAAE;UAC7CiC,WAAW,EAAC,mBAAmB;UAC/Bd,SAAS,EAAC;QAAY;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvB,CAAC,eACFpF,OAAA;UAAQ4D,IAAI,EAAC,QAAQ;UAACkB,SAAS,EAAC,aAAa;UAAAC,QAAA,EAAC;QAAI;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eACPpF,OAAA;QAAQgF,OAAO,EAAEX,gBAAiB;QAACS,SAAS,EAAC,iBAAiB;QAAAC,QAAA,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAChF,EAAA,CA1SID,GAAG;AAAA8F,EAAA,GAAH9F,GAAG;AA4ST,eAAeA,GAAG;AAAC,IAAA8F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}